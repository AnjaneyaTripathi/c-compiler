Terminals which are not used

   TRUE
   FALSE
   AND
   OR


State 10 conflicts: 1 shift/reduce
State 40 conflicts: 9 shift/reduce
State 68 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: headers main '(' ')' '{' body return '}'

    2 headers: headers headers

    3 @1: /* empty */

    4 headers: INCLUDE @1

    5 main: datatype ID

    6 datatype: INT
    7         | FLOAT
    8         | CHAR
    9         | VOID

   10 @2: /* empty */

   11 body: FOR @2 '(' statement ';' statement ';' statement ')' '{' body '}'
   12     | statement ';'
   13     | body body

   14 @3: /* empty */

   15 body: PRINTFF @3 '(' STR ')' ';'

   16 @4: /* empty */

   17 body: SCANFF @4 '(' STR ',' '&' ID ')' ';'

   18 @5: /* empty */

   19 statement: datatype ID @5 init
   20          | ID '=' expression
   21          | ID relop value
   22          | ID UNARY
   23          | UNARY ID

   24 init: '=' value
   25     | /* empty */

   26 expression: expression arithmetic expression
   27           | value

   28 arithmetic: ADD
   29           | SUBTRACT
   30           | MULTIPLY
   31           | DIVIDE

   32 relop: LT
   33      | GT
   34      | LE
   35      | GE
   36      | EQ
   37      | NE

   38 value: NUMBER
   39      | ID

   40 return: RETURN NUMBER ';'
   41       | /* empty */


Terminals, with rules where they appear

$end (0) 0
'&' (38) 17
'(' (40) 1 11 15 17
')' (41) 1 11 15 17
',' (44) 17
';' (59) 11 12 15 17 40
'=' (61) 20 24
'{' (123) 1 11
'}' (125) 1 11
error (256)
VOID (258) 9
PRINTFF (259) 15
SCANFF (260) 17
INT (261) 6
FLOAT (262) 7
CHAR (263) 8
FOR (264) 11
TRUE (265)
FALSE (266)
NUMBER (267) 38 40
ID (268) 5 17 19 20 21 22 23 39
LE (269) 34
GE (270) 35
EQ (271) 36
NE (272) 37
GT (273) 33
LT (274) 32
AND (275)
OR (276)
STR (277) 15 17
ADD (278) 28
MULTIPLY (279) 30
DIVIDE (280) 31
SUBTRACT (281) 29
UNARY (282) 22 23
INCLUDE (283) 4
RETURN (284) 40


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
headers (40)
    on left: 2 4, on right: 1 2
@1 (41)
    on left: 3, on right: 4
main (42)
    on left: 5, on right: 1
datatype (43)
    on left: 6 7 8 9, on right: 5 19
body (44)
    on left: 11 12 13 15 17, on right: 1 11 13
@2 (45)
    on left: 10, on right: 11
@3 (46)
    on left: 14, on right: 15
@4 (47)
    on left: 16, on right: 17
statement (48)
    on left: 19 20 21 22 23, on right: 11 12
@5 (49)
    on left: 18, on right: 19
init (50)
    on left: 24 25, on right: 19
expression (51)
    on left: 26 27, on right: 20 26
arithmetic (52)
    on left: 28 29 30 31, on right: 26
relop (53)
    on left: 32 33 34 35 36 37, on right: 21
value (54)
    on left: 38 39, on right: 21 24 27
return (55)
    on left: 40 41, on right: 1


state 0

    0 $accept: . program $end

    INCLUDE  shift, and go to state 1

    program  go to state 2
    headers  go to state 3


state 1

    4 headers: INCLUDE . @1

    $default  reduce using rule 3 (@1)

    @1  go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: headers . main '(' ')' '{' body return '}'
    2 headers: headers . headers

    VOID     shift, and go to state 6
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    INCLUDE  shift, and go to state 1

    headers   go to state 10
    main      go to state 11
    datatype  go to state 12


state 4

    4 headers: INCLUDE @1 .

    $default  reduce using rule 4 (headers)


state 5

    0 $accept: program $end .

    $default  accept


state 6

    9 datatype: VOID .

    $default  reduce using rule 9 (datatype)


state 7

    6 datatype: INT .

    $default  reduce using rule 6 (datatype)


state 8

    7 datatype: FLOAT .

    $default  reduce using rule 7 (datatype)


state 9

    8 datatype: CHAR .

    $default  reduce using rule 8 (datatype)


state 10

    2 headers: headers . headers
    2        | headers headers .

    INCLUDE  shift, and go to state 1

    INCLUDE   [reduce using rule 2 (headers)]
    $default  reduce using rule 2 (headers)

    headers  go to state 10


state 11

    1 program: headers main . '(' ')' '{' body return '}'

    '('  shift, and go to state 13


state 12

    5 main: datatype . ID

    ID  shift, and go to state 14


state 13

    1 program: headers main '(' . ')' '{' body return '}'

    ')'  shift, and go to state 15


state 14

    5 main: datatype ID .

    $default  reduce using rule 5 (main)


state 15

    1 program: headers main '(' ')' . '{' body return '}'

    '{'  shift, and go to state 16


state 16

    1 program: headers main '(' ')' '{' . body return '}'

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21

    datatype   go to state 22
    body       go to state 23
    statement  go to state 24


state 17

   15 body: PRINTFF . @3 '(' STR ')' ';'

    $default  reduce using rule 14 (@3)

    @3  go to state 25


state 18

   17 body: SCANFF . @4 '(' STR ',' '&' ID ')' ';'

    $default  reduce using rule 16 (@4)

    @4  go to state 26


state 19

   11 body: FOR . @2 '(' statement ';' statement ';' statement ')' '{' body '}'

    $default  reduce using rule 10 (@2)

    @2  go to state 27


state 20

   20 statement: ID . '=' expression
   21          | ID . relop value
   22          | ID . UNARY

    LE     shift, and go to state 28
    GE     shift, and go to state 29
    EQ     shift, and go to state 30
    NE     shift, and go to state 31
    GT     shift, and go to state 32
    LT     shift, and go to state 33
    UNARY  shift, and go to state 34
    '='    shift, and go to state 35

    relop  go to state 36


state 21

   23 statement: UNARY . ID

    ID  shift, and go to state 37


state 22

   19 statement: datatype . ID @5 init

    ID  shift, and go to state 38


state 23

    1 program: headers main '(' ')' '{' body . return '}'
   13 body: body . body

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21
    RETURN   shift, and go to state 39

    $default  reduce using rule 41 (return)

    datatype   go to state 22
    body       go to state 40
    statement  go to state 24
    return     go to state 41


state 24

   12 body: statement . ';'

    ';'  shift, and go to state 42


state 25

   15 body: PRINTFF @3 . '(' STR ')' ';'

    '('  shift, and go to state 43


state 26

   17 body: SCANFF @4 . '(' STR ',' '&' ID ')' ';'

    '('  shift, and go to state 44


state 27

   11 body: FOR @2 . '(' statement ';' statement ';' statement ')' '{' body '}'

    '('  shift, and go to state 45


state 28

   34 relop: LE .

    $default  reduce using rule 34 (relop)


state 29

   35 relop: GE .

    $default  reduce using rule 35 (relop)


state 30

   36 relop: EQ .

    $default  reduce using rule 36 (relop)


state 31

   37 relop: NE .

    $default  reduce using rule 37 (relop)


state 32

   33 relop: GT .

    $default  reduce using rule 33 (relop)


state 33

   32 relop: LT .

    $default  reduce using rule 32 (relop)


state 34

   22 statement: ID UNARY .

    $default  reduce using rule 22 (statement)


state 35

   20 statement: ID '=' . expression

    NUMBER  shift, and go to state 46
    ID      shift, and go to state 47

    expression  go to state 48
    value       go to state 49


state 36

   21 statement: ID relop . value

    NUMBER  shift, and go to state 46
    ID      shift, and go to state 47

    value  go to state 50


state 37

   23 statement: UNARY ID .

    $default  reduce using rule 23 (statement)


state 38

   19 statement: datatype ID . @5 init

    $default  reduce using rule 18 (@5)

    @5  go to state 51


state 39

   40 return: RETURN . NUMBER ';'

    NUMBER  shift, and go to state 52


state 40

   13 body: body . body
   13     | body body .

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21

    VOID      [reduce using rule 13 (body)]
    PRINTFF   [reduce using rule 13 (body)]
    SCANFF    [reduce using rule 13 (body)]
    INT       [reduce using rule 13 (body)]
    FLOAT     [reduce using rule 13 (body)]
    CHAR      [reduce using rule 13 (body)]
    FOR       [reduce using rule 13 (body)]
    ID        [reduce using rule 13 (body)]
    UNARY     [reduce using rule 13 (body)]
    $default  reduce using rule 13 (body)

    datatype   go to state 22
    body       go to state 40
    statement  go to state 24


state 41

    1 program: headers main '(' ')' '{' body return . '}'

    '}'  shift, and go to state 53


state 42

   12 body: statement ';' .

    $default  reduce using rule 12 (body)


state 43

   15 body: PRINTFF @3 '(' . STR ')' ';'

    STR  shift, and go to state 54


state 44

   17 body: SCANFF @4 '(' . STR ',' '&' ID ')' ';'

    STR  shift, and go to state 55


state 45

   11 body: FOR @2 '(' . statement ';' statement ';' statement ')' '{' body '}'

    VOID   shift, and go to state 6
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    CHAR   shift, and go to state 9
    ID     shift, and go to state 20
    UNARY  shift, and go to state 21

    datatype   go to state 22
    statement  go to state 56


state 46

   38 value: NUMBER .

    $default  reduce using rule 38 (value)


state 47

   39 value: ID .

    $default  reduce using rule 39 (value)


state 48

   20 statement: ID '=' expression .
   26 expression: expression . arithmetic expression

    ADD       shift, and go to state 57
    MULTIPLY  shift, and go to state 58
    DIVIDE    shift, and go to state 59
    SUBTRACT  shift, and go to state 60

    $default  reduce using rule 20 (statement)

    arithmetic  go to state 61


state 49

   27 expression: value .

    $default  reduce using rule 27 (expression)


state 50

   21 statement: ID relop value .

    $default  reduce using rule 21 (statement)


state 51

   19 statement: datatype ID @5 . init

    '='  shift, and go to state 62

    $default  reduce using rule 25 (init)

    init  go to state 63


state 52

   40 return: RETURN NUMBER . ';'

    ';'  shift, and go to state 64


state 53

    1 program: headers main '(' ')' '{' body return '}' .

    $default  reduce using rule 1 (program)


state 54

   15 body: PRINTFF @3 '(' STR . ')' ';'

    ')'  shift, and go to state 65


state 55

   17 body: SCANFF @4 '(' STR . ',' '&' ID ')' ';'

    ','  shift, and go to state 66


state 56

   11 body: FOR @2 '(' statement . ';' statement ';' statement ')' '{' body '}'

    ';'  shift, and go to state 67


state 57

   28 arithmetic: ADD .

    $default  reduce using rule 28 (arithmetic)


state 58

   30 arithmetic: MULTIPLY .

    $default  reduce using rule 30 (arithmetic)


state 59

   31 arithmetic: DIVIDE .

    $default  reduce using rule 31 (arithmetic)


state 60

   29 arithmetic: SUBTRACT .

    $default  reduce using rule 29 (arithmetic)


state 61

   26 expression: expression arithmetic . expression

    NUMBER  shift, and go to state 46
    ID      shift, and go to state 47

    expression  go to state 68
    value       go to state 49


state 62

   24 init: '=' . value

    NUMBER  shift, and go to state 46
    ID      shift, and go to state 47

    value  go to state 69


state 63

   19 statement: datatype ID @5 init .

    $default  reduce using rule 19 (statement)


state 64

   40 return: RETURN NUMBER ';' .

    $default  reduce using rule 40 (return)


state 65

   15 body: PRINTFF @3 '(' STR ')' . ';'

    ';'  shift, and go to state 70


state 66

   17 body: SCANFF @4 '(' STR ',' . '&' ID ')' ';'

    '&'  shift, and go to state 71


state 67

   11 body: FOR @2 '(' statement ';' . statement ';' statement ')' '{' body '}'

    VOID   shift, and go to state 6
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    CHAR   shift, and go to state 9
    ID     shift, and go to state 20
    UNARY  shift, and go to state 21

    datatype   go to state 22
    statement  go to state 72


state 68

   26 expression: expression . arithmetic expression
   26           | expression arithmetic expression .

    ADD       shift, and go to state 57
    MULTIPLY  shift, and go to state 58
    DIVIDE    shift, and go to state 59
    SUBTRACT  shift, and go to state 60

    ADD       [reduce using rule 26 (expression)]
    MULTIPLY  [reduce using rule 26 (expression)]
    DIVIDE    [reduce using rule 26 (expression)]
    SUBTRACT  [reduce using rule 26 (expression)]
    $default  reduce using rule 26 (expression)

    arithmetic  go to state 61


state 69

   24 init: '=' value .

    $default  reduce using rule 24 (init)


state 70

   15 body: PRINTFF @3 '(' STR ')' ';' .

    $default  reduce using rule 15 (body)


state 71

   17 body: SCANFF @4 '(' STR ',' '&' . ID ')' ';'

    ID  shift, and go to state 73


state 72

   11 body: FOR @2 '(' statement ';' statement . ';' statement ')' '{' body '}'

    ';'  shift, and go to state 74


state 73

   17 body: SCANFF @4 '(' STR ',' '&' ID . ')' ';'

    ')'  shift, and go to state 75


state 74

   11 body: FOR @2 '(' statement ';' statement ';' . statement ')' '{' body '}'

    VOID   shift, and go to state 6
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    CHAR   shift, and go to state 9
    ID     shift, and go to state 20
    UNARY  shift, and go to state 21

    datatype   go to state 22
    statement  go to state 76


state 75

   17 body: SCANFF @4 '(' STR ',' '&' ID ')' . ';'

    ';'  shift, and go to state 77


state 76

   11 body: FOR @2 '(' statement ';' statement ';' statement . ')' '{' body '}'

    ')'  shift, and go to state 78


state 77

   17 body: SCANFF @4 '(' STR ',' '&' ID ')' ';' .

    $default  reduce using rule 17 (body)


state 78

   11 body: FOR @2 '(' statement ';' statement ';' statement ')' . '{' body '}'

    '{'  shift, and go to state 79


state 79

   11 body: FOR @2 '(' statement ';' statement ';' statement ')' '{' . body '}'

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21

    datatype   go to state 22
    body       go to state 80
    statement  go to state 24


state 80

   11 body: FOR @2 '(' statement ';' statement ';' statement ')' '{' body . '}'
   13     | body . body

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    ID       shift, and go to state 20
    UNARY    shift, and go to state 21
    '}'      shift, and go to state 81

    datatype   go to state 22
    body       go to state 40
    statement  go to state 24


state 81

   11 body: FOR @2 '(' statement ';' statement ';' statement ')' '{' body '}' .

    $default  reduce using rule 11 (body)
