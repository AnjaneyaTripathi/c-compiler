Terminals unused in grammar

    AND
    OR


State 10 conflicts: 1 shift/reduce
State 36 conflicts: 10 shift/reduce
State 87 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: headers main '(' ')' '{' body return '}'

    2 headers: headers headers

    3 $@1: %empty

    4 headers: INCLUDE $@1

    5 main: datatype ID

    6 datatype: INT
    7         | FLOAT
    8         | CHAR
    9         | VOID

   10 $@2: %empty

   11 body: FOR $@2 '(' statement ';' statement ';' statement ')' '{' body '}'

   12 $@3: %empty

   13 body: IF $@3 '(' condition ')' '{' body '}' else
   14     | statement ';'
   15     | body body

   16 $@4: %empty

   17 body: PRINTFF $@4 '(' STR ')' ';'

   18 $@5: %empty

   19 body: SCANFF $@5 '(' STR ',' '&' ID ')' ';'

   20 $@6: %empty

   21 else: ELSE $@6 '{' body '}'
   22     | %empty

   23 condition: value relop value
   24          | TRUE
   25          | FALSE
   26          | %empty

   27 $@7: %empty

   28 statement: datatype ID $@7 init

   29 $@8: %empty

   30 statement: ID $@8 '=' expression

   31 $@9: %empty

   32 statement: ID $@9 relop expression

   33 $@10: %empty

   34 statement: ID $@10 UNARY
   35          | UNARY ID

   36 init: '=' value
   37     | %empty

   38 expression: expression arithmetic expression
   39           | value

   40 arithmetic: ADD
   41           | SUBTRACT
   42           | MULTIPLY
   43           | DIVIDE

   44 relop: LT
   45      | GT
   46      | LE
   47      | GE
   48      | EQ
   49      | NE

   50 value: NUMBER
   51      | ID

   52 $@11: %empty

   53 return: RETURN $@11 value ';'
   54       | %empty


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 19
    '(' (40) 1 11 13 17 19
    ')' (41) 1 11 13 17 19
    ',' (44) 19
    ';' (59) 11 14 17 19 53
    '=' (61) 30 36
    '{' (123) 1 11 13 21
    '}' (125) 1 11 13 21
    error (256)
    VOID (258) 9
    PRINTFF <nam> (259) 17
    SCANFF <nam> (260) 19
    INT <nam> (261) 6
    FLOAT <nam> (262) 7
    CHAR <nam> (263) 8
    FOR <nam> (264) 11
    IF <nam> (265) 13
    ELSE <nam> (266) 21
    TRUE <nam> (267) 24
    FALSE <nam> (268) 25
    NUMBER <nam> (269) 50
    ID <nam> (270) 5 19 28 30 32 34 35 51
    LE <nam> (271) 46
    GE <nam> (272) 47
    EQ <nam> (273) 48
    NE <nam> (274) 49
    GT <nam> (275) 45
    LT <nam> (276) 44
    AND <nam> (277)
    OR <nam> (278)
    STR <nam> (279) 17 19
    ADD <nam> (280) 40
    MULTIPLY <nam> (281) 42
    DIVIDE <nam> (282) 43
    SUBTRACT <nam> (283) 41
    UNARY <nam> (284) 34 35
    INCLUDE <nam> (285) 4
    RETURN <nam> (286) 53


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    program <nam> (41)
        on left: 1
        on right: 0
    headers <nam> (42)
        on left: 2 4
        on right: 1 2
    $@1 (43)
        on left: 3
        on right: 4
    main <nam> (44)
        on left: 5
        on right: 1
    datatype <nam> (45)
        on left: 6 7 8 9
        on right: 5 28
    body <nam> (46)
        on left: 11 13 14 15 17 19
        on right: 1 11 13 15 21
    $@2 (47)
        on left: 10
        on right: 11
    $@3 (48)
        on left: 12
        on right: 13
    $@4 (49)
        on left: 16
        on right: 17
    $@5 (50)
        on left: 18
        on right: 19
    else <nam> (51)
        on left: 21 22
        on right: 13
    $@6 (52)
        on left: 20
        on right: 21
    condition <nam> (53)
        on left: 23 24 25 26
        on right: 13
    statement <nam> (54)
        on left: 28 30 32 34 35
        on right: 11 14
    $@7 (55)
        on left: 27
        on right: 28
    $@8 (56)
        on left: 29
        on right: 30
    $@9 (57)
        on left: 31
        on right: 32
    $@10 (58)
        on left: 33
        on right: 34
    init <nam> (59)
        on left: 36 37
        on right: 28
    expression <nam> (60)
        on left: 38 39
        on right: 30 32 38
    arithmetic <nam> (61)
        on left: 40 41 42 43
        on right: 38
    relop <nam> (62)
        on left: 44 45 46 47 48 49
        on right: 23 32
    value <nam> (63)
        on left: 50 51
        on right: 23 36 39 53
    return <nam> (64)
        on left: 53 54
        on right: 1
    $@11 (65)
        on left: 52
        on right: 53


State 0

    0 $accept: . program $end

    INCLUDE  shift, and go to state 1

    program  go to state 2
    headers  go to state 3


State 1

    4 headers: INCLUDE . $@1

    $default  reduce using rule 3 ($@1)

    $@1  go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: headers . main '(' ')' '{' body return '}'
    2 headers: headers . headers

    VOID     shift, and go to state 6
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    INCLUDE  shift, and go to state 1

    headers   go to state 10
    main      go to state 11
    datatype  go to state 12


State 4

    4 headers: INCLUDE $@1 .

    $default  reduce using rule 4 (headers)


State 5

    0 $accept: program $end .

    $default  accept


State 6

    9 datatype: VOID .

    $default  reduce using rule 9 (datatype)


State 7

    6 datatype: INT .

    $default  reduce using rule 6 (datatype)


State 8

    7 datatype: FLOAT .

    $default  reduce using rule 7 (datatype)


State 9

    8 datatype: CHAR .

    $default  reduce using rule 8 (datatype)


State 10

    2 headers: headers . headers
    2        | headers headers .

    INCLUDE  shift, and go to state 1

    INCLUDE   [reduce using rule 2 (headers)]
    $default  reduce using rule 2 (headers)

    headers  go to state 10


State 11

    1 program: headers main . '(' ')' '{' body return '}'

    '('  shift, and go to state 13


State 12

    5 main: datatype . ID

    ID  shift, and go to state 14


State 13

    1 program: headers main '(' . ')' '{' body return '}'

    ')'  shift, and go to state 15


State 14

    5 main: datatype ID .

    $default  reduce using rule 5 (main)


State 15

    1 program: headers main '(' ')' . '{' body return '}'

    '{'  shift, and go to state 16


State 16

    1 program: headers main '(' ')' '{' . body return '}'

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    IF       shift, and go to state 20
    ID       shift, and go to state 21
    UNARY    shift, and go to state 22

    datatype   go to state 23
    body       go to state 24
    statement  go to state 25


State 17

   17 body: PRINTFF . $@4 '(' STR ')' ';'

    $default  reduce using rule 16 ($@4)

    $@4  go to state 26


State 18

   19 body: SCANFF . $@5 '(' STR ',' '&' ID ')' ';'

    $default  reduce using rule 18 ($@5)

    $@5  go to state 27


State 19

   11 body: FOR . $@2 '(' statement ';' statement ';' statement ')' '{' body '}'

    $default  reduce using rule 10 ($@2)

    $@2  go to state 28


State 20

   13 body: IF . $@3 '(' condition ')' '{' body '}' else

    $default  reduce using rule 12 ($@3)

    $@3  go to state 29


State 21

   30 statement: ID . $@8 '=' expression
   32          | ID . $@9 relop expression
   34          | ID . $@10 UNARY

    UNARY     reduce using rule 33 ($@10)
    '='       reduce using rule 29 ($@8)
    $default  reduce using rule 31 ($@9)

    $@8   go to state 30
    $@9   go to state 31
    $@10  go to state 32


State 22

   35 statement: UNARY . ID

    ID  shift, and go to state 33


State 23

   28 statement: datatype . ID $@7 init

    ID  shift, and go to state 34


State 24

    1 program: headers main '(' ')' '{' body . return '}'
   15 body: body . body

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    IF       shift, and go to state 20
    ID       shift, and go to state 21
    UNARY    shift, and go to state 22
    RETURN   shift, and go to state 35

    $default  reduce using rule 54 (return)

    datatype   go to state 23
    body       go to state 36
    statement  go to state 25
    return     go to state 37


State 25

   14 body: statement . ';'

    ';'  shift, and go to state 38


State 26

   17 body: PRINTFF $@4 . '(' STR ')' ';'

    '('  shift, and go to state 39


State 27

   19 body: SCANFF $@5 . '(' STR ',' '&' ID ')' ';'

    '('  shift, and go to state 40


State 28

   11 body: FOR $@2 . '(' statement ';' statement ';' statement ')' '{' body '}'

    '('  shift, and go to state 41


State 29

   13 body: IF $@3 . '(' condition ')' '{' body '}' else

    '('  shift, and go to state 42


State 30

   30 statement: ID $@8 . '=' expression

    '='  shift, and go to state 43


State 31

   32 statement: ID $@9 . relop expression

    LE  shift, and go to state 44
    GE  shift, and go to state 45
    EQ  shift, and go to state 46
    NE  shift, and go to state 47
    GT  shift, and go to state 48
    LT  shift, and go to state 49

    relop  go to state 50


State 32

   34 statement: ID $@10 . UNARY

    UNARY  shift, and go to state 51


State 33

   35 statement: UNARY ID .

    $default  reduce using rule 35 (statement)


State 34

   28 statement: datatype ID . $@7 init

    $default  reduce using rule 27 ($@7)

    $@7  go to state 52


State 35

   53 return: RETURN . $@11 value ';'

    $default  reduce using rule 52 ($@11)

    $@11  go to state 53


State 36

   15 body: body . body
   15     | body body .

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    IF       shift, and go to state 20
    ID       shift, and go to state 21
    UNARY    shift, and go to state 22

    VOID      [reduce using rule 15 (body)]
    PRINTFF   [reduce using rule 15 (body)]
    SCANFF    [reduce using rule 15 (body)]
    INT       [reduce using rule 15 (body)]
    FLOAT     [reduce using rule 15 (body)]
    CHAR      [reduce using rule 15 (body)]
    FOR       [reduce using rule 15 (body)]
    IF        [reduce using rule 15 (body)]
    ID        [reduce using rule 15 (body)]
    UNARY     [reduce using rule 15 (body)]
    $default  reduce using rule 15 (body)

    datatype   go to state 23
    body       go to state 36
    statement  go to state 25


State 37

    1 program: headers main '(' ')' '{' body return . '}'

    '}'  shift, and go to state 54


State 38

   14 body: statement ';' .

    $default  reduce using rule 14 (body)


State 39

   17 body: PRINTFF $@4 '(' . STR ')' ';'

    STR  shift, and go to state 55


State 40

   19 body: SCANFF $@5 '(' . STR ',' '&' ID ')' ';'

    STR  shift, and go to state 56


State 41

   11 body: FOR $@2 '(' . statement ';' statement ';' statement ')' '{' body '}'

    VOID   shift, and go to state 6
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    CHAR   shift, and go to state 9
    ID     shift, and go to state 21
    UNARY  shift, and go to state 22

    datatype   go to state 23
    statement  go to state 57


State 42

   13 body: IF $@3 '(' . condition ')' '{' body '}' else

    TRUE    shift, and go to state 58
    FALSE   shift, and go to state 59
    NUMBER  shift, and go to state 60
    ID      shift, and go to state 61

    $default  reduce using rule 26 (condition)

    condition  go to state 62
    value      go to state 63


State 43

   30 statement: ID $@8 '=' . expression

    NUMBER  shift, and go to state 60
    ID      shift, and go to state 61

    expression  go to state 64
    value       go to state 65


State 44

   46 relop: LE .

    $default  reduce using rule 46 (relop)


State 45

   47 relop: GE .

    $default  reduce using rule 47 (relop)


State 46

   48 relop: EQ .

    $default  reduce using rule 48 (relop)


State 47

   49 relop: NE .

    $default  reduce using rule 49 (relop)


State 48

   45 relop: GT .

    $default  reduce using rule 45 (relop)


State 49

   44 relop: LT .

    $default  reduce using rule 44 (relop)


State 50

   32 statement: ID $@9 relop . expression

    NUMBER  shift, and go to state 60
    ID      shift, and go to state 61

    expression  go to state 66
    value       go to state 65


State 51

   34 statement: ID $@10 UNARY .

    $default  reduce using rule 34 (statement)


State 52

   28 statement: datatype ID $@7 . init

    '='  shift, and go to state 67

    $default  reduce using rule 37 (init)

    init  go to state 68


State 53

   53 return: RETURN $@11 . value ';'

    NUMBER  shift, and go to state 60
    ID      shift, and go to state 61

    value  go to state 69


State 54

    1 program: headers main '(' ')' '{' body return '}' .

    $default  reduce using rule 1 (program)


State 55

   17 body: PRINTFF $@4 '(' STR . ')' ';'

    ')'  shift, and go to state 70


State 56

   19 body: SCANFF $@5 '(' STR . ',' '&' ID ')' ';'

    ','  shift, and go to state 71


State 57

   11 body: FOR $@2 '(' statement . ';' statement ';' statement ')' '{' body '}'

    ';'  shift, and go to state 72


State 58

   24 condition: TRUE .

    $default  reduce using rule 24 (condition)


State 59

   25 condition: FALSE .

    $default  reduce using rule 25 (condition)


State 60

   50 value: NUMBER .

    $default  reduce using rule 50 (value)


State 61

   51 value: ID .

    $default  reduce using rule 51 (value)


State 62

   13 body: IF $@3 '(' condition . ')' '{' body '}' else

    ')'  shift, and go to state 73


State 63

   23 condition: value . relop value

    LE  shift, and go to state 44
    GE  shift, and go to state 45
    EQ  shift, and go to state 46
    NE  shift, and go to state 47
    GT  shift, and go to state 48
    LT  shift, and go to state 49

    relop  go to state 74


State 64

   30 statement: ID $@8 '=' expression .
   38 expression: expression . arithmetic expression

    ADD       shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    DIVIDE    shift, and go to state 77
    SUBTRACT  shift, and go to state 78

    $default  reduce using rule 30 (statement)

    arithmetic  go to state 79


State 65

   39 expression: value .

    $default  reduce using rule 39 (expression)


State 66

   32 statement: ID $@9 relop expression .
   38 expression: expression . arithmetic expression

    ADD       shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    DIVIDE    shift, and go to state 77
    SUBTRACT  shift, and go to state 78

    $default  reduce using rule 32 (statement)

    arithmetic  go to state 79


State 67

   36 init: '=' . value

    NUMBER  shift, and go to state 60
    ID      shift, and go to state 61

    value  go to state 80


State 68

   28 statement: datatype ID $@7 init .

    $default  reduce using rule 28 (statement)


State 69

   53 return: RETURN $@11 value . ';'

    ';'  shift, and go to state 81


State 70

   17 body: PRINTFF $@4 '(' STR ')' . ';'

    ';'  shift, and go to state 82


State 71

   19 body: SCANFF $@5 '(' STR ',' . '&' ID ')' ';'

    '&'  shift, and go to state 83


State 72

   11 body: FOR $@2 '(' statement ';' . statement ';' statement ')' '{' body '}'

    VOID   shift, and go to state 6
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    CHAR   shift, and go to state 9
    ID     shift, and go to state 21
    UNARY  shift, and go to state 22

    datatype   go to state 23
    statement  go to state 84


State 73

   13 body: IF $@3 '(' condition ')' . '{' body '}' else

    '{'  shift, and go to state 85


State 74

   23 condition: value relop . value

    NUMBER  shift, and go to state 60
    ID      shift, and go to state 61

    value  go to state 86


State 75

   40 arithmetic: ADD .

    $default  reduce using rule 40 (arithmetic)


State 76

   42 arithmetic: MULTIPLY .

    $default  reduce using rule 42 (arithmetic)


State 77

   43 arithmetic: DIVIDE .

    $default  reduce using rule 43 (arithmetic)


State 78

   41 arithmetic: SUBTRACT .

    $default  reduce using rule 41 (arithmetic)


State 79

   38 expression: expression arithmetic . expression

    NUMBER  shift, and go to state 60
    ID      shift, and go to state 61

    expression  go to state 87
    value       go to state 65


State 80

   36 init: '=' value .

    $default  reduce using rule 36 (init)


State 81

   53 return: RETURN $@11 value ';' .

    $default  reduce using rule 53 (return)


State 82

   17 body: PRINTFF $@4 '(' STR ')' ';' .

    $default  reduce using rule 17 (body)


State 83

   19 body: SCANFF $@5 '(' STR ',' '&' . ID ')' ';'

    ID  shift, and go to state 88


State 84

   11 body: FOR $@2 '(' statement ';' statement . ';' statement ')' '{' body '}'

    ';'  shift, and go to state 89


State 85

   13 body: IF $@3 '(' condition ')' '{' . body '}' else

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    IF       shift, and go to state 20
    ID       shift, and go to state 21
    UNARY    shift, and go to state 22

    datatype   go to state 23
    body       go to state 90
    statement  go to state 25


State 86

   23 condition: value relop value .

    $default  reduce using rule 23 (condition)


State 87

   38 expression: expression . arithmetic expression
   38           | expression arithmetic expression .

    ADD       shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    DIVIDE    shift, and go to state 77
    SUBTRACT  shift, and go to state 78

    ADD       [reduce using rule 38 (expression)]
    MULTIPLY  [reduce using rule 38 (expression)]
    DIVIDE    [reduce using rule 38 (expression)]
    SUBTRACT  [reduce using rule 38 (expression)]
    $default  reduce using rule 38 (expression)

    arithmetic  go to state 79


State 88

   19 body: SCANFF $@5 '(' STR ',' '&' ID . ')' ';'

    ')'  shift, and go to state 91


State 89

   11 body: FOR $@2 '(' statement ';' statement ';' . statement ')' '{' body '}'

    VOID   shift, and go to state 6
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    CHAR   shift, and go to state 9
    ID     shift, and go to state 21
    UNARY  shift, and go to state 22

    datatype   go to state 23
    statement  go to state 92


State 90

   13 body: IF $@3 '(' condition ')' '{' body . '}' else
   15     | body . body

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    IF       shift, and go to state 20
    ID       shift, and go to state 21
    UNARY    shift, and go to state 22
    '}'      shift, and go to state 93

    datatype   go to state 23
    body       go to state 36
    statement  go to state 25


State 91

   19 body: SCANFF $@5 '(' STR ',' '&' ID ')' . ';'

    ';'  shift, and go to state 94


State 92

   11 body: FOR $@2 '(' statement ';' statement ';' statement . ')' '{' body '}'

    ')'  shift, and go to state 95


State 93

   13 body: IF $@3 '(' condition ')' '{' body '}' . else

    ELSE  shift, and go to state 96

    $default  reduce using rule 22 (else)

    else  go to state 97


State 94

   19 body: SCANFF $@5 '(' STR ',' '&' ID ')' ';' .

    $default  reduce using rule 19 (body)


State 95

   11 body: FOR $@2 '(' statement ';' statement ';' statement ')' . '{' body '}'

    '{'  shift, and go to state 98


State 96

   21 else: ELSE . $@6 '{' body '}'

    $default  reduce using rule 20 ($@6)

    $@6  go to state 99


State 97

   13 body: IF $@3 '(' condition ')' '{' body '}' else .

    $default  reduce using rule 13 (body)


State 98

   11 body: FOR $@2 '(' statement ';' statement ';' statement ')' '{' . body '}'

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    IF       shift, and go to state 20
    ID       shift, and go to state 21
    UNARY    shift, and go to state 22

    datatype   go to state 23
    body       go to state 100
    statement  go to state 25


State 99

   21 else: ELSE $@6 . '{' body '}'

    '{'  shift, and go to state 101


State 100

   11 body: FOR $@2 '(' statement ';' statement ';' statement ')' '{' body . '}'
   15     | body . body

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    IF       shift, and go to state 20
    ID       shift, and go to state 21
    UNARY    shift, and go to state 22
    '}'      shift, and go to state 102

    datatype   go to state 23
    body       go to state 36
    statement  go to state 25


State 101

   21 else: ELSE $@6 '{' . body '}'

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    IF       shift, and go to state 20
    ID       shift, and go to state 21
    UNARY    shift, and go to state 22

    datatype   go to state 23
    body       go to state 103
    statement  go to state 25


State 102

   11 body: FOR $@2 '(' statement ';' statement ';' statement ')' '{' body '}' .

    $default  reduce using rule 11 (body)


State 103

   15 body: body . body
   21 else: ELSE $@6 '{' body . '}'

    VOID     shift, and go to state 6
    PRINTFF  shift, and go to state 17
    SCANFF   shift, and go to state 18
    INT      shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    FOR      shift, and go to state 19
    IF       shift, and go to state 20
    ID       shift, and go to state 21
    UNARY    shift, and go to state 22
    '}'      shift, and go to state 104

    datatype   go to state 23
    body       go to state 36
    statement  go to state 25


State 104

   21 else: ELSE $@6 '{' body '}' .

    $default  reduce using rule 21 (else)
