State 6 conflicts: 1 shift/reduce
State 18 conflicts: 1 reduce/reduce
State 25 conflicts: 6 shift/reduce


Grammar

    0 $accept: program $end

    1 program: headers main '(' ')' '{' body return '}'

    2 headers: headers headers
    3        | INCLUDE

    4 @1: /* empty */

    5 main: DATATYPE @1 ID

    6 body: expressions
    7     | loops
    8     | conditionals
    9     | expressions body
   10     | loops body
   11     | conditionals body

   12 @2: /* empty */

   13 loops: FOR @2 '(' statement statement statement ')' '{' body '}'

   14 expressions: statement expressions
   15            | statement

   16 @3: /* empty */

   17 conditionals: IF @3 '(' condition ')' '{' expressions '}' else

   18 @4: /* empty */

   19 else: ELSE @4 '{' expressions '}'
   20     | /* empty */

   21 @5: /* empty */

   22 @6: /* empty */

   23 statement: DATATYPE @5 ID @6 ';'

   24 @7: /* empty */

   25 statement: DATATYPE @7 variable
   26          | ID BINARY statement
   27          | ID UNARY ';'
   28          | UNARY ID ';'
   29          | ID ';'

   30 @8: /* empty */

   31 statement: NUMBER @8 ';'
   32          | PRINTFF '(' STRLT ')' ';'
   33          | SCANFF '(' STRLT ',' '&' ID ')' ';'

   34 variable: ID array
   35         | '*' variable

   36 @9: /* empty */

   37 @10: /* empty */

   38 variable: ID @9 '=' NUMBER @10 ';'
   39         | ',' variable

   40 @11: /* empty */

   41 array: '[' NUMBER @11 ']' array
   42      | '[' ID ']' array
   43      | '[' ']' array
   44      | ';'

   45 condition: condition BINARY boolean
   46          | boolean

   47 boolean: ID BINARY ID
   48        | ID BINARY NUMBER

   49 @12: /* empty */

   50 boolean: NUMBER @12 BINARY ID
   51        | TRUE
   52        | FALSE

   53 @13: /* empty */

   54 @14: /* empty */

   55 return: RETURN @13 NUMBER @14 ';'

   56 @15: /* empty */

   57 return: RETURN @15 ID ';'
   58       | /* empty */


Terminals, with rules where they appear

$end (0) 0
'&' (38) 33
'(' (40) 1 13 17 32 33
')' (41) 1 13 17 32 33
'*' (42) 35
',' (44) 33 39
';' (59) 23 27 28 29 31 32 33 38 44 55 57
'=' (61) 38
'[' (91) 41 42 43
']' (93) 41 42 43
'{' (123) 1 13 17 19
'}' (125) 1 13 17 19
error (256)
INCLUDE (258) 3
FOR (259) 13
IF (260) 17
ELSE (261) 19
ID (262) 5 23 26 27 28 29 33 34 38 42 47 48 50 57
NUMBER (263) 31 38 41 48 50 55
UNARY (264) 27 28
BINARY (265) 26 45 47 48 50
DATATYPE (266) 5 23 25
TRUE (267) 51
FALSE (268) 52
RETURN (269) 55 57
PRINTFF (270) 32
SCANFF (271) 33
STRLT (272) 32 33


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
program (30)
    on left: 1, on right: 0
headers (31)
    on left: 2 3, on right: 1 2
main (32)
    on left: 5, on right: 1
@1 (33)
    on left: 4, on right: 5
body (34)
    on left: 6 7 8 9 10 11, on right: 1 9 10 11 13
loops (35)
    on left: 13, on right: 7 10
@2 (36)
    on left: 12, on right: 13
expressions (37)
    on left: 14 15, on right: 6 9 14 17 19
conditionals (38)
    on left: 17, on right: 8 11
@3 (39)
    on left: 16, on right: 17
else (40)
    on left: 19 20, on right: 17
@4 (41)
    on left: 18, on right: 19
statement (42)
    on left: 23 25 26 27 28 29 31 32 33, on right: 13 14 15 26
@5 (43)
    on left: 21, on right: 23
@6 (44)
    on left: 22, on right: 23
@7 (45)
    on left: 24, on right: 25
@8 (46)
    on left: 30, on right: 31
variable (47)
    on left: 34 35 38 39, on right: 25 35 39
@9 (48)
    on left: 36, on right: 38
@10 (49)
    on left: 37, on right: 38
array (50)
    on left: 41 42 43 44, on right: 34 41 42 43
@11 (51)
    on left: 40, on right: 41
condition (52)
    on left: 45 46, on right: 17 45
boolean (53)
    on left: 47 48 50 51 52, on right: 45 46
@12 (54)
    on left: 49, on right: 50
return (55)
    on left: 55 57 58, on right: 1
@13 (56)
    on left: 53, on right: 55
@14 (57)
    on left: 54, on right: 55
@15 (58)
    on left: 56, on right: 57


state 0

    0 $accept: . program $end

    INCLUDE  shift, and go to state 1

    program  go to state 2
    headers  go to state 3


state 1

    3 headers: INCLUDE .

    $default  reduce using rule 3 (headers)


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: headers . main '(' ')' '{' body return '}'
    2 headers: headers . headers

    INCLUDE   shift, and go to state 1
    DATATYPE  shift, and go to state 5

    headers  go to state 6
    main     go to state 7


state 4

    0 $accept: program $end .

    $default  accept


state 5

    5 main: DATATYPE . @1 ID

    $default  reduce using rule 4 (@1)

    @1  go to state 8


state 6

    2 headers: headers . headers
    2        | headers headers .

    INCLUDE  shift, and go to state 1

    INCLUDE   [reduce using rule 2 (headers)]
    $default  reduce using rule 2 (headers)

    headers  go to state 6


state 7

    1 program: headers main . '(' ')' '{' body return '}'

    '('  shift, and go to state 9


state 8

    5 main: DATATYPE @1 . ID

    ID  shift, and go to state 10


state 9

    1 program: headers main '(' . ')' '{' body return '}'

    ')'  shift, and go to state 11


state 10

    5 main: DATATYPE @1 ID .

    $default  reduce using rule 5 (main)


state 11

    1 program: headers main '(' ')' . '{' body return '}'

    '{'  shift, and go to state 12


state 12

    1 program: headers main '(' ')' '{' . body return '}'

    FOR       shift, and go to state 13
    IF        shift, and go to state 14
    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    body          go to state 21
    loops         go to state 22
    expressions   go to state 23
    conditionals  go to state 24
    statement     go to state 25


state 13

   13 loops: FOR . @2 '(' statement statement statement ')' '{' body '}'

    $default  reduce using rule 12 (@2)

    @2  go to state 26


state 14

   17 conditionals: IF . @3 '(' condition ')' '{' expressions '}' else

    $default  reduce using rule 16 (@3)

    @3  go to state 27


state 15

   26 statement: ID . BINARY statement
   27          | ID . UNARY ';'
   29          | ID . ';'

    UNARY   shift, and go to state 28
    BINARY  shift, and go to state 29
    ';'     shift, and go to state 30


state 16

   31 statement: NUMBER . @8 ';'

    $default  reduce using rule 30 (@8)

    @8  go to state 31


state 17

   28 statement: UNARY . ID ';'

    ID  shift, and go to state 32


state 18

   23 statement: DATATYPE . @5 ID @6 ';'
   25          | DATATYPE . @7 variable

    ID        reduce using rule 21 (@5)
    ID        [reduce using rule 24 (@7)]
    $default  reduce using rule 24 (@7)

    @5  go to state 33
    @7  go to state 34


state 19

   32 statement: PRINTFF . '(' STRLT ')' ';'

    '('  shift, and go to state 35


state 20

   33 statement: SCANFF . '(' STRLT ',' '&' ID ')' ';'

    '('  shift, and go to state 36


state 21

    1 program: headers main '(' ')' '{' body . return '}'

    RETURN  shift, and go to state 37

    $default  reduce using rule 58 (return)

    return  go to state 38


state 22

    7 body: loops .
   10     | loops . body

    FOR       shift, and go to state 13
    IF        shift, and go to state 14
    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    $default  reduce using rule 7 (body)

    body          go to state 39
    loops         go to state 22
    expressions   go to state 23
    conditionals  go to state 24
    statement     go to state 25


state 23

    6 body: expressions .
    9     | expressions . body

    FOR       shift, and go to state 13
    IF        shift, and go to state 14
    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    $default  reduce using rule 6 (body)

    body          go to state 40
    loops         go to state 22
    expressions   go to state 23
    conditionals  go to state 24
    statement     go to state 25


state 24

    8 body: conditionals .
   11     | conditionals . body

    FOR       shift, and go to state 13
    IF        shift, and go to state 14
    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    $default  reduce using rule 8 (body)

    body          go to state 41
    loops         go to state 22
    expressions   go to state 23
    conditionals  go to state 24
    statement     go to state 25


state 25

   14 expressions: statement . expressions
   15            | statement .

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    ID        [reduce using rule 15 (expressions)]
    NUMBER    [reduce using rule 15 (expressions)]
    UNARY     [reduce using rule 15 (expressions)]
    DATATYPE  [reduce using rule 15 (expressions)]
    PRINTFF   [reduce using rule 15 (expressions)]
    SCANFF    [reduce using rule 15 (expressions)]
    $default  reduce using rule 15 (expressions)

    expressions  go to state 42
    statement    go to state 25


state 26

   13 loops: FOR @2 . '(' statement statement statement ')' '{' body '}'

    '('  shift, and go to state 43


state 27

   17 conditionals: IF @3 . '(' condition ')' '{' expressions '}' else

    '('  shift, and go to state 44


state 28

   27 statement: ID UNARY . ';'

    ';'  shift, and go to state 45


state 29

   26 statement: ID BINARY . statement

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    statement  go to state 46


state 30

   29 statement: ID ';' .

    $default  reduce using rule 29 (statement)


state 31

   31 statement: NUMBER @8 . ';'

    ';'  shift, and go to state 47


state 32

   28 statement: UNARY ID . ';'

    ';'  shift, and go to state 48


state 33

   23 statement: DATATYPE @5 . ID @6 ';'

    ID  shift, and go to state 49


state 34

   25 statement: DATATYPE @7 . variable

    ID   shift, and go to state 50
    ','  shift, and go to state 51
    '*'  shift, and go to state 52

    variable  go to state 53


state 35

   32 statement: PRINTFF '(' . STRLT ')' ';'

    STRLT  shift, and go to state 54


state 36

   33 statement: SCANFF '(' . STRLT ',' '&' ID ')' ';'

    STRLT  shift, and go to state 55


state 37

   55 return: RETURN . @13 NUMBER @14 ';'
   57       | RETURN . @15 ID ';'

    ID        reduce using rule 56 (@15)
    $default  reduce using rule 53 (@13)

    @13  go to state 56
    @15  go to state 57


state 38

    1 program: headers main '(' ')' '{' body return . '}'

    '}'  shift, and go to state 58


state 39

   10 body: loops body .

    $default  reduce using rule 10 (body)


state 40

    9 body: expressions body .

    $default  reduce using rule 9 (body)


state 41

   11 body: conditionals body .

    $default  reduce using rule 11 (body)


state 42

   14 expressions: statement expressions .

    $default  reduce using rule 14 (expressions)


state 43

   13 loops: FOR @2 '(' . statement statement statement ')' '{' body '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    statement  go to state 59


state 44

   17 conditionals: IF @3 '(' . condition ')' '{' expressions '}' else

    ID      shift, and go to state 60
    NUMBER  shift, and go to state 61
    TRUE    shift, and go to state 62
    FALSE   shift, and go to state 63

    condition  go to state 64
    boolean    go to state 65


state 45

   27 statement: ID UNARY ';' .

    $default  reduce using rule 27 (statement)


state 46

   26 statement: ID BINARY statement .

    $default  reduce using rule 26 (statement)


state 47

   31 statement: NUMBER @8 ';' .

    $default  reduce using rule 31 (statement)


state 48

   28 statement: UNARY ID ';' .

    $default  reduce using rule 28 (statement)


state 49

   23 statement: DATATYPE @5 ID . @6 ';'

    $default  reduce using rule 22 (@6)

    @6  go to state 66


state 50

   34 variable: ID . array
   38         | ID . @9 '=' NUMBER @10 ';'

    ';'  shift, and go to state 67
    '['  shift, and go to state 68

    $default  reduce using rule 36 (@9)

    @9     go to state 69
    array  go to state 70


state 51

   39 variable: ',' . variable

    ID   shift, and go to state 50
    ','  shift, and go to state 51
    '*'  shift, and go to state 52

    variable  go to state 71


state 52

   35 variable: '*' . variable

    ID   shift, and go to state 50
    ','  shift, and go to state 51
    '*'  shift, and go to state 52

    variable  go to state 72


state 53

   25 statement: DATATYPE @7 variable .

    $default  reduce using rule 25 (statement)


state 54

   32 statement: PRINTFF '(' STRLT . ')' ';'

    ')'  shift, and go to state 73


state 55

   33 statement: SCANFF '(' STRLT . ',' '&' ID ')' ';'

    ','  shift, and go to state 74


state 56

   55 return: RETURN @13 . NUMBER @14 ';'

    NUMBER  shift, and go to state 75


state 57

   57 return: RETURN @15 . ID ';'

    ID  shift, and go to state 76


state 58

    1 program: headers main '(' ')' '{' body return '}' .

    $default  reduce using rule 1 (program)


state 59

   13 loops: FOR @2 '(' statement . statement statement ')' '{' body '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    statement  go to state 77


state 60

   47 boolean: ID . BINARY ID
   48        | ID . BINARY NUMBER

    BINARY  shift, and go to state 78


state 61

   50 boolean: NUMBER . @12 BINARY ID

    $default  reduce using rule 49 (@12)

    @12  go to state 79


state 62

   51 boolean: TRUE .

    $default  reduce using rule 51 (boolean)


state 63

   52 boolean: FALSE .

    $default  reduce using rule 52 (boolean)


state 64

   17 conditionals: IF @3 '(' condition . ')' '{' expressions '}' else
   45 condition: condition . BINARY boolean

    BINARY  shift, and go to state 80
    ')'     shift, and go to state 81


state 65

   46 condition: boolean .

    $default  reduce using rule 46 (condition)


state 66

   23 statement: DATATYPE @5 ID @6 . ';'

    ';'  shift, and go to state 82


state 67

   44 array: ';' .

    $default  reduce using rule 44 (array)


state 68

   41 array: '[' . NUMBER @11 ']' array
   42      | '[' . ID ']' array
   43      | '[' . ']' array

    ID      shift, and go to state 83
    NUMBER  shift, and go to state 84
    ']'     shift, and go to state 85


state 69

   38 variable: ID @9 . '=' NUMBER @10 ';'

    '='  shift, and go to state 86


state 70

   34 variable: ID array .

    $default  reduce using rule 34 (variable)


state 71

   39 variable: ',' variable .

    $default  reduce using rule 39 (variable)


state 72

   35 variable: '*' variable .

    $default  reduce using rule 35 (variable)


state 73

   32 statement: PRINTFF '(' STRLT ')' . ';'

    ';'  shift, and go to state 87


state 74

   33 statement: SCANFF '(' STRLT ',' . '&' ID ')' ';'

    '&'  shift, and go to state 88


state 75

   55 return: RETURN @13 NUMBER . @14 ';'

    $default  reduce using rule 54 (@14)

    @14  go to state 89


state 76

   57 return: RETURN @15 ID . ';'

    ';'  shift, and go to state 90


state 77

   13 loops: FOR @2 '(' statement statement . statement ')' '{' body '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    statement  go to state 91


state 78

   47 boolean: ID BINARY . ID
   48        | ID BINARY . NUMBER

    ID      shift, and go to state 92
    NUMBER  shift, and go to state 93


state 79

   50 boolean: NUMBER @12 . BINARY ID

    BINARY  shift, and go to state 94


state 80

   45 condition: condition BINARY . boolean

    ID      shift, and go to state 60
    NUMBER  shift, and go to state 61
    TRUE    shift, and go to state 62
    FALSE   shift, and go to state 63

    boolean  go to state 95


state 81

   17 conditionals: IF @3 '(' condition ')' . '{' expressions '}' else

    '{'  shift, and go to state 96


state 82

   23 statement: DATATYPE @5 ID @6 ';' .

    $default  reduce using rule 23 (statement)


state 83

   42 array: '[' ID . ']' array

    ']'  shift, and go to state 97


state 84

   41 array: '[' NUMBER . @11 ']' array

    $default  reduce using rule 40 (@11)

    @11  go to state 98


state 85

   43 array: '[' ']' . array

    ';'  shift, and go to state 67
    '['  shift, and go to state 68

    array  go to state 99


state 86

   38 variable: ID @9 '=' . NUMBER @10 ';'

    NUMBER  shift, and go to state 100


state 87

   32 statement: PRINTFF '(' STRLT ')' ';' .

    $default  reduce using rule 32 (statement)


state 88

   33 statement: SCANFF '(' STRLT ',' '&' . ID ')' ';'

    ID  shift, and go to state 101


state 89

   55 return: RETURN @13 NUMBER @14 . ';'

    ';'  shift, and go to state 102


state 90

   57 return: RETURN @15 ID ';' .

    $default  reduce using rule 57 (return)


state 91

   13 loops: FOR @2 '(' statement statement statement . ')' '{' body '}'

    ')'  shift, and go to state 103


state 92

   47 boolean: ID BINARY ID .

    $default  reduce using rule 47 (boolean)


state 93

   48 boolean: ID BINARY NUMBER .

    $default  reduce using rule 48 (boolean)


state 94

   50 boolean: NUMBER @12 BINARY . ID

    ID  shift, and go to state 104


state 95

   45 condition: condition BINARY boolean .

    $default  reduce using rule 45 (condition)


state 96

   17 conditionals: IF @3 '(' condition ')' '{' . expressions '}' else

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    expressions  go to state 105
    statement    go to state 25


state 97

   42 array: '[' ID ']' . array

    ';'  shift, and go to state 67
    '['  shift, and go to state 68

    array  go to state 106


state 98

   41 array: '[' NUMBER @11 . ']' array

    ']'  shift, and go to state 107


state 99

   43 array: '[' ']' array .

    $default  reduce using rule 43 (array)


state 100

   38 variable: ID @9 '=' NUMBER . @10 ';'

    $default  reduce using rule 37 (@10)

    @10  go to state 108


state 101

   33 statement: SCANFF '(' STRLT ',' '&' ID . ')' ';'

    ')'  shift, and go to state 109


state 102

   55 return: RETURN @13 NUMBER @14 ';' .

    $default  reduce using rule 55 (return)


state 103

   13 loops: FOR @2 '(' statement statement statement ')' . '{' body '}'

    '{'  shift, and go to state 110


state 104

   50 boolean: NUMBER @12 BINARY ID .

    $default  reduce using rule 50 (boolean)


state 105

   17 conditionals: IF @3 '(' condition ')' '{' expressions . '}' else

    '}'  shift, and go to state 111


state 106

   42 array: '[' ID ']' array .

    $default  reduce using rule 42 (array)


state 107

   41 array: '[' NUMBER @11 ']' . array

    ';'  shift, and go to state 67
    '['  shift, and go to state 68

    array  go to state 112


state 108

   38 variable: ID @9 '=' NUMBER @10 . ';'

    ';'  shift, and go to state 113


state 109

   33 statement: SCANFF '(' STRLT ',' '&' ID ')' . ';'

    ';'  shift, and go to state 114


state 110

   13 loops: FOR @2 '(' statement statement statement ')' '{' . body '}'

    FOR       shift, and go to state 13
    IF        shift, and go to state 14
    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    body          go to state 115
    loops         go to state 22
    expressions   go to state 23
    conditionals  go to state 24
    statement     go to state 25


state 111

   17 conditionals: IF @3 '(' condition ')' '{' expressions '}' . else

    ELSE  shift, and go to state 116

    $default  reduce using rule 20 (else)

    else  go to state 117


state 112

   41 array: '[' NUMBER @11 ']' array .

    $default  reduce using rule 41 (array)


state 113

   38 variable: ID @9 '=' NUMBER @10 ';' .

    $default  reduce using rule 38 (variable)


state 114

   33 statement: SCANFF '(' STRLT ',' '&' ID ')' ';' .

    $default  reduce using rule 33 (statement)


state 115

   13 loops: FOR @2 '(' statement statement statement ')' '{' body . '}'

    '}'  shift, and go to state 118


state 116

   19 else: ELSE . @4 '{' expressions '}'

    $default  reduce using rule 18 (@4)

    @4  go to state 119


state 117

   17 conditionals: IF @3 '(' condition ')' '{' expressions '}' else .

    $default  reduce using rule 17 (conditionals)


state 118

   13 loops: FOR @2 '(' statement statement statement ')' '{' body '}' .

    $default  reduce using rule 13 (loops)


state 119

   19 else: ELSE @4 . '{' expressions '}'

    '{'  shift, and go to state 120


state 120

   19 else: ELSE @4 '{' . expressions '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    expressions  go to state 121
    statement    go to state 25


state 121

   19 else: ELSE @4 '{' expressions . '}'

    '}'  shift, and go to state 122


state 122

   19 else: ELSE @4 '{' expressions '}' .

    $default  reduce using rule 19 (else)
