Rules never reduced

   44 @12: /* empty */


State 23 conflicts: 6 shift/reduce
State 36 conflicts: 6 shift/reduce
State 55 conflicts: 1 shift/reduce
State 83 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: headers main '(' ')' '{' body return '}'

    2 headers: headers INCLUDE
    3        | INCLUDE

    4 @1: /* empty */

    5 main: DATATYPE @1 ID

    6 body: expressions
    7     | loops
    8     | conditionals
    9     | body expressions
   10     | body loops
   11     | body conditionals

   12 @2: /* empty */

   13 loops: FOR @2 '(' statement ';' statement ';' statement ')' '{' body '}'

   14 expressions: expressions statement ';'
   15            | statement ';'

   16 @3: /* empty */

   17 conditionals: IF @3 '(' condition ')' '{' expressions '}' else

   18 @4: /* empty */

   19 else: ELSE @4 '{' expressions '}'
   20     | /* empty */

   21 @5: /* empty */

   22 statement: ID @5 BINARY statement

   23 @6: /* empty */

   24 statement: ID @6 UNARY
   25          | UNARY ID
   26          | ID
   27          | NUMBER

   28 @7: /* empty */

   29 statement: DATATYPE @7 variable
   30          | PRINTFF '(' STRLT ')'

   31 @8: /* empty */

   32 statement: SCANFF '(' STRLT ',' '&' ID @8 ')'

   33 @9: /* empty */

   34 variable: ID @9 array
   35         | '*' variable

   36 @10: /* empty */

   37 array: '[' NUMBER @10 ']' array

   38 @11: /* empty */

   39 array: '[' ID @11 ']' array
   40      | '[' ']' array
   41      | /* empty */

   42 condition: condition BINARY condition
   43          | boolean

   44 @12: /* empty */

   45 boolean: ID @12 BINARY ID
   46        | ID BINARY NUMBER

   47 @13: /* empty */

   48 boolean: NUMBER @13 BINARY ID
   49        | TRUE
   50        | FALSE

   51 @14: /* empty */

   52 @15: /* empty */

   53 return: RETURN @14 NUMBER @15 ';'

   54 @16: /* empty */

   55 @17: /* empty */

   56 return: RETURN @16 ID @17 ';'
   57       | /* empty */


Terminals, with rules where they appear

$end (0) 0
'&' (38) 32
'(' (40) 1 13 17 30 32
')' (41) 1 13 17 30 32
'*' (42) 35
',' (44) 32
';' (59) 13 14 15 53 56
'[' (91) 37 39 40
']' (93) 37 39 40
'{' (123) 1 13 17 19
'}' (125) 1 13 17 19
error (256)
INCLUDE (258) 2 3
FOR (259) 13
IF (260) 17
ELSE (261) 19
ID (262) 5 22 24 25 26 32 34 39 45 46 48 56
NUMBER (263) 27 37 46 48 53
UNARY (264) 24 25
BINARY (265) 22 42 45 46 48
DATATYPE (266) 5 29
TRUE (267) 49
FALSE (268) 50
RETURN (269) 53 56
PRINTFF (270) 30
SCANFF (271) 32
STRLT (272) 30 32


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
program (29)
    on left: 1, on right: 0
headers (30)
    on left: 2 3, on right: 1 2
main (31)
    on left: 5, on right: 1
@1 (32)
    on left: 4, on right: 5
body (33)
    on left: 6 7 8 9 10 11, on right: 1 9 10 11 13
loops (34)
    on left: 13, on right: 7 10
@2 (35)
    on left: 12, on right: 13
expressions (36)
    on left: 14 15, on right: 6 9 14 17 19
conditionals (37)
    on left: 17, on right: 8 11
@3 (38)
    on left: 16, on right: 17
else (39)
    on left: 19 20, on right: 17
@4 (40)
    on left: 18, on right: 19
statement (41)
    on left: 22 24 25 26 27 29 30 32, on right: 13 14 15 22
@5 (42)
    on left: 21, on right: 22
@6 (43)
    on left: 23, on right: 24
@7 (44)
    on left: 28, on right: 29
@8 (45)
    on left: 31, on right: 32
variable (46)
    on left: 34 35, on right: 29 35
@9 (47)
    on left: 33, on right: 34
array (48)
    on left: 37 39 40 41, on right: 34 37 39 40
@10 (49)
    on left: 36, on right: 37
@11 (50)
    on left: 38, on right: 39
condition (51)
    on left: 42 43, on right: 17 42
boolean (52)
    on left: 45 46 48 49 50, on right: 43
@12 (53)
    on left: 44, on right: 45
@13 (54)
    on left: 47, on right: 48
return (55)
    on left: 53 56 57, on right: 1
@14 (56)
    on left: 51, on right: 53
@15 (57)
    on left: 52, on right: 53
@16 (58)
    on left: 54, on right: 56
@17 (59)
    on left: 55, on right: 56


state 0

    0 $accept: . program $end

    INCLUDE  shift, and go to state 1

    program  go to state 2
    headers  go to state 3


state 1

    3 headers: INCLUDE .

    $default  reduce using rule 3 (headers)


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: headers . main '(' ')' '{' body return '}'
    2 headers: headers . INCLUDE

    INCLUDE   shift, and go to state 5
    DATATYPE  shift, and go to state 6

    main  go to state 7


state 4

    0 $accept: program $end .

    $default  accept


state 5

    2 headers: headers INCLUDE .

    $default  reduce using rule 2 (headers)


state 6

    5 main: DATATYPE . @1 ID

    $default  reduce using rule 4 (@1)

    @1  go to state 8


state 7

    1 program: headers main . '(' ')' '{' body return '}'

    '('  shift, and go to state 9


state 8

    5 main: DATATYPE @1 . ID

    ID  shift, and go to state 10


state 9

    1 program: headers main '(' . ')' '{' body return '}'

    ')'  shift, and go to state 11


state 10

    5 main: DATATYPE @1 ID .

    $default  reduce using rule 5 (main)


state 11

    1 program: headers main '(' ')' . '{' body return '}'

    '{'  shift, and go to state 12


state 12

    1 program: headers main '(' ')' '{' . body return '}'

    FOR       shift, and go to state 13
    IF        shift, and go to state 14
    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    body          go to state 21
    loops         go to state 22
    expressions   go to state 23
    conditionals  go to state 24
    statement     go to state 25


state 13

   13 loops: FOR . @2 '(' statement ';' statement ';' statement ')' '{' body '}'

    $default  reduce using rule 12 (@2)

    @2  go to state 26


state 14

   17 conditionals: IF . @3 '(' condition ')' '{' expressions '}' else

    $default  reduce using rule 16 (@3)

    @3  go to state 27


state 15

   22 statement: ID . @5 BINARY statement
   24          | ID . @6 UNARY
   26          | ID .

    UNARY     reduce using rule 23 (@6)
    BINARY    reduce using rule 21 (@5)
    $default  reduce using rule 26 (statement)

    @5  go to state 28
    @6  go to state 29


state 16

   27 statement: NUMBER .

    $default  reduce using rule 27 (statement)


state 17

   25 statement: UNARY . ID

    ID  shift, and go to state 30


state 18

   29 statement: DATATYPE . @7 variable

    $default  reduce using rule 28 (@7)

    @7  go to state 31


state 19

   30 statement: PRINTFF . '(' STRLT ')'

    '('  shift, and go to state 32


state 20

   32 statement: SCANFF . '(' STRLT ',' '&' ID @8 ')'

    '('  shift, and go to state 33


state 21

    1 program: headers main '(' ')' '{' body . return '}'
    9 body: body . expressions
   10     | body . loops
   11     | body . conditionals

    FOR       shift, and go to state 13
    IF        shift, and go to state 14
    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    RETURN    shift, and go to state 34
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    $default  reduce using rule 57 (return)

    loops         go to state 35
    expressions   go to state 36
    conditionals  go to state 37
    statement     go to state 25
    return        go to state 38


state 22

    7 body: loops .

    $default  reduce using rule 7 (body)


state 23

    6 body: expressions .
   14 expressions: expressions . statement ';'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    ID        [reduce using rule 6 (body)]
    NUMBER    [reduce using rule 6 (body)]
    UNARY     [reduce using rule 6 (body)]
    DATATYPE  [reduce using rule 6 (body)]
    PRINTFF   [reduce using rule 6 (body)]
    SCANFF    [reduce using rule 6 (body)]
    $default  reduce using rule 6 (body)

    statement  go to state 39


state 24

    8 body: conditionals .

    $default  reduce using rule 8 (body)


state 25

   15 expressions: statement . ';'

    ';'  shift, and go to state 40


state 26

   13 loops: FOR @2 . '(' statement ';' statement ';' statement ')' '{' body '}'

    '('  shift, and go to state 41


state 27

   17 conditionals: IF @3 . '(' condition ')' '{' expressions '}' else

    '('  shift, and go to state 42


state 28

   22 statement: ID @5 . BINARY statement

    BINARY  shift, and go to state 43


state 29

   24 statement: ID @6 . UNARY

    UNARY  shift, and go to state 44


state 30

   25 statement: UNARY ID .

    $default  reduce using rule 25 (statement)


state 31

   29 statement: DATATYPE @7 . variable

    ID   shift, and go to state 45
    '*'  shift, and go to state 46

    variable  go to state 47


state 32

   30 statement: PRINTFF '(' . STRLT ')'

    STRLT  shift, and go to state 48


state 33

   32 statement: SCANFF '(' . STRLT ',' '&' ID @8 ')'

    STRLT  shift, and go to state 49


state 34

   53 return: RETURN . @14 NUMBER @15 ';'
   56       | RETURN . @16 ID @17 ';'

    ID        reduce using rule 54 (@16)
    $default  reduce using rule 51 (@14)

    @14  go to state 50
    @16  go to state 51


state 35

   10 body: body loops .

    $default  reduce using rule 10 (body)


state 36

    9 body: body expressions .
   14 expressions: expressions . statement ';'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    ID        [reduce using rule 9 (body)]
    NUMBER    [reduce using rule 9 (body)]
    UNARY     [reduce using rule 9 (body)]
    DATATYPE  [reduce using rule 9 (body)]
    PRINTFF   [reduce using rule 9 (body)]
    SCANFF    [reduce using rule 9 (body)]
    $default  reduce using rule 9 (body)

    statement  go to state 39


state 37

   11 body: body conditionals .

    $default  reduce using rule 11 (body)


state 38

    1 program: headers main '(' ')' '{' body return . '}'

    '}'  shift, and go to state 52


state 39

   14 expressions: expressions statement . ';'

    ';'  shift, and go to state 53


state 40

   15 expressions: statement ';' .

    $default  reduce using rule 15 (expressions)


state 41

   13 loops: FOR @2 '(' . statement ';' statement ';' statement ')' '{' body '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    statement  go to state 54


state 42

   17 conditionals: IF @3 '(' . condition ')' '{' expressions '}' else

    ID      shift, and go to state 55
    NUMBER  shift, and go to state 56
    TRUE    shift, and go to state 57
    FALSE   shift, and go to state 58

    condition  go to state 59
    boolean    go to state 60


state 43

   22 statement: ID @5 BINARY . statement

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    statement  go to state 61


state 44

   24 statement: ID @6 UNARY .

    $default  reduce using rule 24 (statement)


state 45

   34 variable: ID . @9 array

    $default  reduce using rule 33 (@9)

    @9  go to state 62


state 46

   35 variable: '*' . variable

    ID   shift, and go to state 45
    '*'  shift, and go to state 46

    variable  go to state 63


state 47

   29 statement: DATATYPE @7 variable .

    $default  reduce using rule 29 (statement)


state 48

   30 statement: PRINTFF '(' STRLT . ')'

    ')'  shift, and go to state 64


state 49

   32 statement: SCANFF '(' STRLT . ',' '&' ID @8 ')'

    ','  shift, and go to state 65


state 50

   53 return: RETURN @14 . NUMBER @15 ';'

    NUMBER  shift, and go to state 66


state 51

   56 return: RETURN @16 . ID @17 ';'

    ID  shift, and go to state 67


state 52

    1 program: headers main '(' ')' '{' body return '}' .

    $default  reduce using rule 1 (program)


state 53

   14 expressions: expressions statement ';' .

    $default  reduce using rule 14 (expressions)


state 54

   13 loops: FOR @2 '(' statement . ';' statement ';' statement ')' '{' body '}'

    ';'  shift, and go to state 68


state 55

   45 boolean: ID . @12 BINARY ID
   46        | ID . BINARY NUMBER

    BINARY  shift, and go to state 69

    BINARY  [reduce using rule 44 (@12)]

    @12  go to state 70


state 56

   48 boolean: NUMBER . @13 BINARY ID

    $default  reduce using rule 47 (@13)

    @13  go to state 71


state 57

   49 boolean: TRUE .

    $default  reduce using rule 49 (boolean)


state 58

   50 boolean: FALSE .

    $default  reduce using rule 50 (boolean)


state 59

   17 conditionals: IF @3 '(' condition . ')' '{' expressions '}' else
   42 condition: condition . BINARY condition

    BINARY  shift, and go to state 72
    ')'     shift, and go to state 73


state 60

   43 condition: boolean .

    $default  reduce using rule 43 (condition)


state 61

   22 statement: ID @5 BINARY statement .

    $default  reduce using rule 22 (statement)


state 62

   34 variable: ID @9 . array

    '['  shift, and go to state 74

    $default  reduce using rule 41 (array)

    array  go to state 75


state 63

   35 variable: '*' variable .

    $default  reduce using rule 35 (variable)


state 64

   30 statement: PRINTFF '(' STRLT ')' .

    $default  reduce using rule 30 (statement)


state 65

   32 statement: SCANFF '(' STRLT ',' . '&' ID @8 ')'

    '&'  shift, and go to state 76


state 66

   53 return: RETURN @14 NUMBER . @15 ';'

    $default  reduce using rule 52 (@15)

    @15  go to state 77


state 67

   56 return: RETURN @16 ID . @17 ';'

    $default  reduce using rule 55 (@17)

    @17  go to state 78


state 68

   13 loops: FOR @2 '(' statement ';' . statement ';' statement ')' '{' body '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    statement  go to state 79


state 69

   46 boolean: ID BINARY . NUMBER

    NUMBER  shift, and go to state 80


state 70

   45 boolean: ID @12 . BINARY ID

    BINARY  shift, and go to state 81


state 71

   48 boolean: NUMBER @13 . BINARY ID

    BINARY  shift, and go to state 82


state 72

   42 condition: condition BINARY . condition

    ID      shift, and go to state 55
    NUMBER  shift, and go to state 56
    TRUE    shift, and go to state 57
    FALSE   shift, and go to state 58

    condition  go to state 83
    boolean    go to state 60


state 73

   17 conditionals: IF @3 '(' condition ')' . '{' expressions '}' else

    '{'  shift, and go to state 84


state 74

   37 array: '[' . NUMBER @10 ']' array
   39      | '[' . ID @11 ']' array
   40      | '[' . ']' array

    ID      shift, and go to state 85
    NUMBER  shift, and go to state 86
    ']'     shift, and go to state 87


state 75

   34 variable: ID @9 array .

    $default  reduce using rule 34 (variable)


state 76

   32 statement: SCANFF '(' STRLT ',' '&' . ID @8 ')'

    ID  shift, and go to state 88


state 77

   53 return: RETURN @14 NUMBER @15 . ';'

    ';'  shift, and go to state 89


state 78

   56 return: RETURN @16 ID @17 . ';'

    ';'  shift, and go to state 90


state 79

   13 loops: FOR @2 '(' statement ';' statement . ';' statement ')' '{' body '}'

    ';'  shift, and go to state 91


state 80

   46 boolean: ID BINARY NUMBER .

    $default  reduce using rule 46 (boolean)


state 81

   45 boolean: ID @12 BINARY . ID

    ID  shift, and go to state 92


state 82

   48 boolean: NUMBER @13 BINARY . ID

    ID  shift, and go to state 93


state 83

   42 condition: condition . BINARY condition
   42          | condition BINARY condition .

    BINARY  shift, and go to state 72

    BINARY    [reduce using rule 42 (condition)]
    $default  reduce using rule 42 (condition)


state 84

   17 conditionals: IF @3 '(' condition ')' '{' . expressions '}' else

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    expressions  go to state 94
    statement    go to state 25


state 85

   39 array: '[' ID . @11 ']' array

    $default  reduce using rule 38 (@11)

    @11  go to state 95


state 86

   37 array: '[' NUMBER . @10 ']' array

    $default  reduce using rule 36 (@10)

    @10  go to state 96


state 87

   40 array: '[' ']' . array

    '['  shift, and go to state 74

    $default  reduce using rule 41 (array)

    array  go to state 97


state 88

   32 statement: SCANFF '(' STRLT ',' '&' ID . @8 ')'

    $default  reduce using rule 31 (@8)

    @8  go to state 98


state 89

   53 return: RETURN @14 NUMBER @15 ';' .

    $default  reduce using rule 53 (return)


state 90

   56 return: RETURN @16 ID @17 ';' .

    $default  reduce using rule 56 (return)


state 91

   13 loops: FOR @2 '(' statement ';' statement ';' . statement ')' '{' body '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    statement  go to state 99


state 92

   45 boolean: ID @12 BINARY ID .

    $default  reduce using rule 45 (boolean)


state 93

   48 boolean: NUMBER @13 BINARY ID .

    $default  reduce using rule 48 (boolean)


state 94

   14 expressions: expressions . statement ';'
   17 conditionals: IF @3 '(' condition ')' '{' expressions . '}' else

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20
    '}'       shift, and go to state 100

    statement  go to state 39


state 95

   39 array: '[' ID @11 . ']' array

    ']'  shift, and go to state 101


state 96

   37 array: '[' NUMBER @10 . ']' array

    ']'  shift, and go to state 102


state 97

   40 array: '[' ']' array .

    $default  reduce using rule 40 (array)


state 98

   32 statement: SCANFF '(' STRLT ',' '&' ID @8 . ')'

    ')'  shift, and go to state 103


state 99

   13 loops: FOR @2 '(' statement ';' statement ';' statement . ')' '{' body '}'

    ')'  shift, and go to state 104


state 100

   17 conditionals: IF @3 '(' condition ')' '{' expressions '}' . else

    ELSE  shift, and go to state 105

    $default  reduce using rule 20 (else)

    else  go to state 106


state 101

   39 array: '[' ID @11 ']' . array

    '['  shift, and go to state 74

    $default  reduce using rule 41 (array)

    array  go to state 107


state 102

   37 array: '[' NUMBER @10 ']' . array

    '['  shift, and go to state 74

    $default  reduce using rule 41 (array)

    array  go to state 108


state 103

   32 statement: SCANFF '(' STRLT ',' '&' ID @8 ')' .

    $default  reduce using rule 32 (statement)


state 104

   13 loops: FOR @2 '(' statement ';' statement ';' statement ')' . '{' body '}'

    '{'  shift, and go to state 109


state 105

   19 else: ELSE . @4 '{' expressions '}'

    $default  reduce using rule 18 (@4)

    @4  go to state 110


state 106

   17 conditionals: IF @3 '(' condition ')' '{' expressions '}' else .

    $default  reduce using rule 17 (conditionals)


state 107

   39 array: '[' ID @11 ']' array .

    $default  reduce using rule 39 (array)


state 108

   37 array: '[' NUMBER @10 ']' array .

    $default  reduce using rule 37 (array)


state 109

   13 loops: FOR @2 '(' statement ';' statement ';' statement ')' '{' . body '}'

    FOR       shift, and go to state 13
    IF        shift, and go to state 14
    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    body          go to state 111
    loops         go to state 22
    expressions   go to state 23
    conditionals  go to state 24
    statement     go to state 25


state 110

   19 else: ELSE @4 . '{' expressions '}'

    '{'  shift, and go to state 112


state 111

    9 body: body . expressions
   10     | body . loops
   11     | body . conditionals
   13 loops: FOR @2 '(' statement ';' statement ';' statement ')' '{' body . '}'

    FOR       shift, and go to state 13
    IF        shift, and go to state 14
    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20
    '}'       shift, and go to state 113

    loops         go to state 35
    expressions   go to state 36
    conditionals  go to state 37
    statement     go to state 25


state 112

   19 else: ELSE @4 '{' . expressions '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    expressions  go to state 114
    statement    go to state 25


state 113

   13 loops: FOR @2 '(' statement ';' statement ';' statement ')' '{' body '}' .

    $default  reduce using rule 13 (loops)


state 114

   14 expressions: expressions . statement ';'
   19 else: ELSE @4 '{' expressions . '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20
    '}'       shift, and go to state 115

    statement  go to state 39


state 115

   19 else: ELSE @4 '{' expressions '}' .

    $default  reduce using rule 19 (else)
