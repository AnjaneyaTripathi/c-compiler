State 23 conflicts: 6 shift/reduce
State 38 conflicts: 6 shift/reduce
State 76 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: headers main '(' ')' '{' body return '}'

    2 headers: headers INCLUDE
    3        | INCLUDE

    4 $@1: %empty

    5 main: DATATYPE $@1 ID

    6 body: expressions
    7     | loops
    8     | conditionals
    9     | body expressions
   10     | body loops
   11     | body conditionals

   12 $@2: %empty

   13 loops: FOR $@2 '(' statement ';' statement ';' statement ')' '{' body '}'

   14 expressions: expressions statement ';'
   15            | statement ';'

   16 conditionals: IF '(' condition ')' '{' expressions '}'
   17             | IF '(' condition ')' '{' expressions '}' ELSE '{' expressions '}'

   18 statement: ID BINARY statement
   19          | ID UNARY
   20          | UNARY ID
   21          | ID
   22          | NUMBER
   23          | DATATYPE variable
   24          | PRINTFF '(' STRLT ')'
   25          | SCANFF '(' STRLT ',' '&' ID ')'

   26 variable: ID array
   27         | '*' variable

   28 array: '[' NUMBER ']' array
   29      | '[' ID ']' array
   30      | '[' ']' array
   31      | %empty

   32 condition: condition BINARY condition
   33          | boolean

   34 boolean: ID BINARY ID
   35        | ID BINARY NUMBER
   36        | NUMBER BINARY ID
   37        | TRUE
   38        | FALSE

   39 return: RETURN NUMBER ';'
   40       | RETURN ID ';'
   41       | %empty


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 25
    '(' (40) 1 13 16 17 24 25
    ')' (41) 1 13 16 17 24 25
    '*' (42) 27
    ',' (44) 25
    ';' (59) 13 14 15 39 40
    '[' (91) 28 29 30
    ']' (93) 28 29 30
    '{' (123) 1 13 16 17
    '}' (125) 1 13 16 17
    error (256)
    INCLUDE (258) 2 3
    FOR (259) 13
    IF (260) 16 17
    ELSE (261) 17
    ID (262) 5 18 19 20 21 25 26 29 34 35 36 40
    NUMBER (263) 22 28 35 36 39
    UNARY (264) 19 20
    BINARY (265) 18 32 34 35 36
    DATATYPE (266) 5 23
    TRUE (267) 37
    FALSE (268) 38
    RETURN (269) 39 40
    PRINTFF (270) 24
    SCANFF (271) 25
    STRLT (272) 24 25


Nonterminals, with rules where they appear

    $accept (28)
        on left: 0
    program (29)
        on left: 1
        on right: 0
    headers (30)
        on left: 2 3
        on right: 1 2
    main (31)
        on left: 5
        on right: 1
    $@1 (32)
        on left: 4
        on right: 5
    body (33)
        on left: 6 7 8 9 10 11
        on right: 1 9 10 11 13
    loops (34)
        on left: 13
        on right: 7 10
    $@2 (35)
        on left: 12
        on right: 13
    expressions (36)
        on left: 14 15
        on right: 6 9 14 16 17
    conditionals (37)
        on left: 16 17
        on right: 8 11
    statement (38)
        on left: 18 19 20 21 22 23 24 25
        on right: 13 14 15 18
    variable (39)
        on left: 26 27
        on right: 23 27
    array (40)
        on left: 28 29 30 31
        on right: 26 28 29 30
    condition (41)
        on left: 32 33
        on right: 16 17 32
    boolean (42)
        on left: 34 35 36 37 38
        on right: 33
    return (43)
        on left: 39 40 41
        on right: 1


State 0

    0 $accept: . program $end

    INCLUDE  shift, and go to state 1

    program  go to state 2
    headers  go to state 3


State 1

    3 headers: INCLUDE .

    $default  reduce using rule 3 (headers)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: headers . main '(' ')' '{' body return '}'
    2 headers: headers . INCLUDE

    INCLUDE   shift, and go to state 5
    DATATYPE  shift, and go to state 6

    main  go to state 7


State 4

    0 $accept: program $end .

    $default  accept


State 5

    2 headers: headers INCLUDE .

    $default  reduce using rule 2 (headers)


State 6

    5 main: DATATYPE . $@1 ID

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 7

    1 program: headers main . '(' ')' '{' body return '}'

    '('  shift, and go to state 9


State 8

    5 main: DATATYPE $@1 . ID

    ID  shift, and go to state 10


State 9

    1 program: headers main '(' . ')' '{' body return '}'

    ')'  shift, and go to state 11


State 10

    5 main: DATATYPE $@1 ID .

    $default  reduce using rule 5 (main)


State 11

    1 program: headers main '(' ')' . '{' body return '}'

    '{'  shift, and go to state 12


State 12

    1 program: headers main '(' ')' '{' . body return '}'

    FOR       shift, and go to state 13
    IF        shift, and go to state 14
    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    body          go to state 21
    loops         go to state 22
    expressions   go to state 23
    conditionals  go to state 24
    statement     go to state 25


State 13

   13 loops: FOR . $@2 '(' statement ';' statement ';' statement ')' '{' body '}'

    $default  reduce using rule 12 ($@2)

    $@2  go to state 26


State 14

   16 conditionals: IF . '(' condition ')' '{' expressions '}'
   17             | IF . '(' condition ')' '{' expressions '}' ELSE '{' expressions '}'

    '('  shift, and go to state 27


State 15

   18 statement: ID . BINARY statement
   19          | ID . UNARY
   21          | ID .

    UNARY   shift, and go to state 28
    BINARY  shift, and go to state 29

    $default  reduce using rule 21 (statement)


State 16

   22 statement: NUMBER .

    $default  reduce using rule 22 (statement)


State 17

   20 statement: UNARY . ID

    ID  shift, and go to state 30


State 18

   23 statement: DATATYPE . variable

    ID   shift, and go to state 31
    '*'  shift, and go to state 32

    variable  go to state 33


State 19

   24 statement: PRINTFF . '(' STRLT ')'

    '('  shift, and go to state 34


State 20

   25 statement: SCANFF . '(' STRLT ',' '&' ID ')'

    '('  shift, and go to state 35


State 21

    1 program: headers main '(' ')' '{' body . return '}'
    9 body: body . expressions
   10     | body . loops
   11     | body . conditionals

    FOR       shift, and go to state 13
    IF        shift, and go to state 14
    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    RETURN    shift, and go to state 36
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    $default  reduce using rule 41 (return)

    loops         go to state 37
    expressions   go to state 38
    conditionals  go to state 39
    statement     go to state 25
    return        go to state 40


State 22

    7 body: loops .

    $default  reduce using rule 7 (body)


State 23

    6 body: expressions .
   14 expressions: expressions . statement ';'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    ID        [reduce using rule 6 (body)]
    NUMBER    [reduce using rule 6 (body)]
    UNARY     [reduce using rule 6 (body)]
    DATATYPE  [reduce using rule 6 (body)]
    PRINTFF   [reduce using rule 6 (body)]
    SCANFF    [reduce using rule 6 (body)]
    $default  reduce using rule 6 (body)

    statement  go to state 41


State 24

    8 body: conditionals .

    $default  reduce using rule 8 (body)


State 25

   15 expressions: statement . ';'

    ';'  shift, and go to state 42


State 26

   13 loops: FOR $@2 . '(' statement ';' statement ';' statement ')' '{' body '}'

    '('  shift, and go to state 43


State 27

   16 conditionals: IF '(' . condition ')' '{' expressions '}'
   17             | IF '(' . condition ')' '{' expressions '}' ELSE '{' expressions '}'

    ID      shift, and go to state 44
    NUMBER  shift, and go to state 45
    TRUE    shift, and go to state 46
    FALSE   shift, and go to state 47

    condition  go to state 48
    boolean    go to state 49


State 28

   19 statement: ID UNARY .

    $default  reduce using rule 19 (statement)


State 29

   18 statement: ID BINARY . statement

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    statement  go to state 50


State 30

   20 statement: UNARY ID .

    $default  reduce using rule 20 (statement)


State 31

   26 variable: ID . array

    '['  shift, and go to state 51

    $default  reduce using rule 31 (array)

    array  go to state 52


State 32

   27 variable: '*' . variable

    ID   shift, and go to state 31
    '*'  shift, and go to state 32

    variable  go to state 53


State 33

   23 statement: DATATYPE variable .

    $default  reduce using rule 23 (statement)


State 34

   24 statement: PRINTFF '(' . STRLT ')'

    STRLT  shift, and go to state 54


State 35

   25 statement: SCANFF '(' . STRLT ',' '&' ID ')'

    STRLT  shift, and go to state 55


State 36

   39 return: RETURN . NUMBER ';'
   40       | RETURN . ID ';'

    ID      shift, and go to state 56
    NUMBER  shift, and go to state 57


State 37

   10 body: body loops .

    $default  reduce using rule 10 (body)


State 38

    9 body: body expressions .
   14 expressions: expressions . statement ';'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    ID        [reduce using rule 9 (body)]
    NUMBER    [reduce using rule 9 (body)]
    UNARY     [reduce using rule 9 (body)]
    DATATYPE  [reduce using rule 9 (body)]
    PRINTFF   [reduce using rule 9 (body)]
    SCANFF    [reduce using rule 9 (body)]
    $default  reduce using rule 9 (body)

    statement  go to state 41


State 39

   11 body: body conditionals .

    $default  reduce using rule 11 (body)


State 40

    1 program: headers main '(' ')' '{' body return . '}'

    '}'  shift, and go to state 58


State 41

   14 expressions: expressions statement . ';'

    ';'  shift, and go to state 59


State 42

   15 expressions: statement ';' .

    $default  reduce using rule 15 (expressions)


State 43

   13 loops: FOR $@2 '(' . statement ';' statement ';' statement ')' '{' body '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    statement  go to state 60


State 44

   34 boolean: ID . BINARY ID
   35        | ID . BINARY NUMBER

    BINARY  shift, and go to state 61


State 45

   36 boolean: NUMBER . BINARY ID

    BINARY  shift, and go to state 62


State 46

   37 boolean: TRUE .

    $default  reduce using rule 37 (boolean)


State 47

   38 boolean: FALSE .

    $default  reduce using rule 38 (boolean)


State 48

   16 conditionals: IF '(' condition . ')' '{' expressions '}'
   17             | IF '(' condition . ')' '{' expressions '}' ELSE '{' expressions '}'
   32 condition: condition . BINARY condition

    BINARY  shift, and go to state 63
    ')'     shift, and go to state 64


State 49

   33 condition: boolean .

    $default  reduce using rule 33 (condition)


State 50

   18 statement: ID BINARY statement .

    $default  reduce using rule 18 (statement)


State 51

   28 array: '[' . NUMBER ']' array
   29      | '[' . ID ']' array
   30      | '[' . ']' array

    ID      shift, and go to state 65
    NUMBER  shift, and go to state 66
    ']'     shift, and go to state 67


State 52

   26 variable: ID array .

    $default  reduce using rule 26 (variable)


State 53

   27 variable: '*' variable .

    $default  reduce using rule 27 (variable)


State 54

   24 statement: PRINTFF '(' STRLT . ')'

    ')'  shift, and go to state 68


State 55

   25 statement: SCANFF '(' STRLT . ',' '&' ID ')'

    ','  shift, and go to state 69


State 56

   40 return: RETURN ID . ';'

    ';'  shift, and go to state 70


State 57

   39 return: RETURN NUMBER . ';'

    ';'  shift, and go to state 71


State 58

    1 program: headers main '(' ')' '{' body return '}' .

    $default  reduce using rule 1 (program)


State 59

   14 expressions: expressions statement ';' .

    $default  reduce using rule 14 (expressions)


State 60

   13 loops: FOR $@2 '(' statement . ';' statement ';' statement ')' '{' body '}'

    ';'  shift, and go to state 72


State 61

   34 boolean: ID BINARY . ID
   35        | ID BINARY . NUMBER

    ID      shift, and go to state 73
    NUMBER  shift, and go to state 74


State 62

   36 boolean: NUMBER BINARY . ID

    ID  shift, and go to state 75


State 63

   32 condition: condition BINARY . condition

    ID      shift, and go to state 44
    NUMBER  shift, and go to state 45
    TRUE    shift, and go to state 46
    FALSE   shift, and go to state 47

    condition  go to state 76
    boolean    go to state 49


State 64

   16 conditionals: IF '(' condition ')' . '{' expressions '}'
   17             | IF '(' condition ')' . '{' expressions '}' ELSE '{' expressions '}'

    '{'  shift, and go to state 77


State 65

   29 array: '[' ID . ']' array

    ']'  shift, and go to state 78


State 66

   28 array: '[' NUMBER . ']' array

    ']'  shift, and go to state 79


State 67

   30 array: '[' ']' . array

    '['  shift, and go to state 51

    $default  reduce using rule 31 (array)

    array  go to state 80


State 68

   24 statement: PRINTFF '(' STRLT ')' .

    $default  reduce using rule 24 (statement)


State 69

   25 statement: SCANFF '(' STRLT ',' . '&' ID ')'

    '&'  shift, and go to state 81


State 70

   40 return: RETURN ID ';' .

    $default  reduce using rule 40 (return)


State 71

   39 return: RETURN NUMBER ';' .

    $default  reduce using rule 39 (return)


State 72

   13 loops: FOR $@2 '(' statement ';' . statement ';' statement ')' '{' body '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    statement  go to state 82


State 73

   34 boolean: ID BINARY ID .

    $default  reduce using rule 34 (boolean)


State 74

   35 boolean: ID BINARY NUMBER .

    $default  reduce using rule 35 (boolean)


State 75

   36 boolean: NUMBER BINARY ID .

    $default  reduce using rule 36 (boolean)


State 76

   32 condition: condition . BINARY condition
   32          | condition BINARY condition .

    BINARY  shift, and go to state 63

    BINARY    [reduce using rule 32 (condition)]
    $default  reduce using rule 32 (condition)


State 77

   16 conditionals: IF '(' condition ')' '{' . expressions '}'
   17             | IF '(' condition ')' '{' . expressions '}' ELSE '{' expressions '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    expressions  go to state 83
    statement    go to state 25


State 78

   29 array: '[' ID ']' . array

    '['  shift, and go to state 51

    $default  reduce using rule 31 (array)

    array  go to state 84


State 79

   28 array: '[' NUMBER ']' . array

    '['  shift, and go to state 51

    $default  reduce using rule 31 (array)

    array  go to state 85


State 80

   30 array: '[' ']' array .

    $default  reduce using rule 30 (array)


State 81

   25 statement: SCANFF '(' STRLT ',' '&' . ID ')'

    ID  shift, and go to state 86


State 82

   13 loops: FOR $@2 '(' statement ';' statement . ';' statement ')' '{' body '}'

    ';'  shift, and go to state 87


State 83

   14 expressions: expressions . statement ';'
   16 conditionals: IF '(' condition ')' '{' expressions . '}'
   17             | IF '(' condition ')' '{' expressions . '}' ELSE '{' expressions '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20
    '}'       shift, and go to state 88

    statement  go to state 41


State 84

   29 array: '[' ID ']' array .

    $default  reduce using rule 29 (array)


State 85

   28 array: '[' NUMBER ']' array .

    $default  reduce using rule 28 (array)


State 86

   25 statement: SCANFF '(' STRLT ',' '&' ID . ')'

    ')'  shift, and go to state 89


State 87

   13 loops: FOR $@2 '(' statement ';' statement ';' . statement ')' '{' body '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    statement  go to state 90


State 88

   16 conditionals: IF '(' condition ')' '{' expressions '}' .
   17             | IF '(' condition ')' '{' expressions '}' . ELSE '{' expressions '}'

    ELSE  shift, and go to state 91

    $default  reduce using rule 16 (conditionals)


State 89

   25 statement: SCANFF '(' STRLT ',' '&' ID ')' .

    $default  reduce using rule 25 (statement)


State 90

   13 loops: FOR $@2 '(' statement ';' statement ';' statement . ')' '{' body '}'

    ')'  shift, and go to state 92


State 91

   17 conditionals: IF '(' condition ')' '{' expressions '}' ELSE . '{' expressions '}'

    '{'  shift, and go to state 93


State 92

   13 loops: FOR $@2 '(' statement ';' statement ';' statement ')' . '{' body '}'

    '{'  shift, and go to state 94


State 93

   17 conditionals: IF '(' condition ')' '{' expressions '}' ELSE '{' . expressions '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    expressions  go to state 95
    statement    go to state 25


State 94

   13 loops: FOR $@2 '(' statement ';' statement ';' statement ')' '{' . body '}'

    FOR       shift, and go to state 13
    IF        shift, and go to state 14
    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    body          go to state 96
    loops         go to state 22
    expressions   go to state 23
    conditionals  go to state 24
    statement     go to state 25


State 95

   14 expressions: expressions . statement ';'
   17 conditionals: IF '(' condition ')' '{' expressions '}' ELSE '{' expressions . '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20
    '}'       shift, and go to state 97

    statement  go to state 41


State 96

    9 body: body . expressions
   10     | body . loops
   11     | body . conditionals
   13 loops: FOR $@2 '(' statement ';' statement ';' statement ')' '{' body . '}'

    FOR       shift, and go to state 13
    IF        shift, and go to state 14
    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20
    '}'       shift, and go to state 98

    loops         go to state 37
    expressions   go to state 38
    conditionals  go to state 39
    statement     go to state 25


State 97

   17 conditionals: IF '(' condition ')' '{' expressions '}' ELSE '{' expressions '}' .

    $default  reduce using rule 17 (conditionals)


State 98

   13 loops: FOR $@2 '(' statement ';' statement ';' statement ')' '{' body '}' .

    $default  reduce using rule 13 (loops)
