State 23 conflicts: 6 shift/reduce
State 36 conflicts: 6 shift/reduce
State 82 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: headers main '(' ')' '{' body return '}'

    2 headers: headers INCLUDE
    3        | INCLUDE

    4 $@1: %empty

    5 main: DATATYPE $@1 ID

    6 body: expressions
    7     | loops
    8     | conditionals
    9     | body expressions
   10     | body loops
   11     | body conditionals

   12 $@2: %empty

   13 loops: FOR $@2 '(' statement ';' statement ';' statement ')' '{' body '}'

   14 expressions: expressions statement ';'
   15            | statement ';'

   16 $@3: %empty

   17 conditionals: IF $@3 '(' condition ')' '{' expressions '}' else

   18 $@4: %empty

   19 else: ELSE $@4 '{' expressions '}'
   20     | %empty

   21 statement: ID BINARY statement
   22          | ID UNARY
   23          | UNARY ID
   24          | ID
   25          | NUMBER

   26 $@5: %empty

   27 statement: DATATYPE $@5 variable
   28          | PRINTFF '(' STRLT ')'
   29          | SCANFF '(' STRLT ',' '&' ID ')'

   30 variable: ID array
   31         | '*' variable

   32 array: '[' NUMBER ']' array
   33      | '[' ID ']' array
   34      | '[' ']' array
   35      | %empty

   36 condition: condition BINARY condition
   37          | boolean

   38 boolean: ID BINARY ID
   39        | ID BINARY NUMBER
   40        | NUMBER BINARY ID
   41        | TRUE
   42        | FALSE

   43 $@6: %empty

   44 return: RETURN $@6 NUMBER ';'

   45 $@7: %empty

   46 return: RETURN $@7 ID ';'
   47       | %empty


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 29
    '(' (40) 1 13 17 28 29
    ')' (41) 1 13 17 28 29
    '*' (42) 31
    ',' (44) 29
    ';' (59) 13 14 15 44 46
    '[' (91) 32 33 34
    ']' (93) 32 33 34
    '{' (123) 1 13 17 19
    '}' (125) 1 13 17 19
    error (256)
    INCLUDE (258) 2 3
    FOR (259) 13
    IF (260) 17
    ELSE (261) 19
    ID (262) 5 21 22 23 24 29 30 33 38 39 40 46
    NUMBER (263) 25 32 39 40 44
    UNARY (264) 22 23
    BINARY (265) 21 36 38 39 40
    DATATYPE (266) 5 27
    TRUE (267) 41
    FALSE (268) 42
    RETURN (269) 44 46
    PRINTFF (270) 28
    SCANFF (271) 29
    STRLT (272) 28 29


Nonterminals, with rules where they appear

    $accept (28)
        on left: 0
    program (29)
        on left: 1
        on right: 0
    headers (30)
        on left: 2 3
        on right: 1 2
    main (31)
        on left: 5
        on right: 1
    $@1 (32)
        on left: 4
        on right: 5
    body (33)
        on left: 6 7 8 9 10 11
        on right: 1 9 10 11 13
    loops (34)
        on left: 13
        on right: 7 10
    $@2 (35)
        on left: 12
        on right: 13
    expressions (36)
        on left: 14 15
        on right: 6 9 14 17 19
    conditionals (37)
        on left: 17
        on right: 8 11
    $@3 (38)
        on left: 16
        on right: 17
    else (39)
        on left: 19 20
        on right: 17
    $@4 (40)
        on left: 18
        on right: 19
    statement (41)
        on left: 21 22 23 24 25 27 28 29
        on right: 13 14 15 21
    $@5 (42)
        on left: 26
        on right: 27
    variable (43)
        on left: 30 31
        on right: 27 31
    array (44)
        on left: 32 33 34 35
        on right: 30 32 33 34
    condition (45)
        on left: 36 37
        on right: 17 36
    boolean (46)
        on left: 38 39 40 41 42
        on right: 37
    return (47)
        on left: 44 46 47
        on right: 1
    $@6 (48)
        on left: 43
        on right: 44
    $@7 (49)
        on left: 45
        on right: 46


State 0

    0 $accept: . program $end

    INCLUDE  shift, and go to state 1

    program  go to state 2
    headers  go to state 3


State 1

    3 headers: INCLUDE .

    $default  reduce using rule 3 (headers)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: headers . main '(' ')' '{' body return '}'
    2 headers: headers . INCLUDE

    INCLUDE   shift, and go to state 5
    DATATYPE  shift, and go to state 6

    main  go to state 7


State 4

    0 $accept: program $end .

    $default  accept


State 5

    2 headers: headers INCLUDE .

    $default  reduce using rule 2 (headers)


State 6

    5 main: DATATYPE . $@1 ID

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 7

    1 program: headers main . '(' ')' '{' body return '}'

    '('  shift, and go to state 9


State 8

    5 main: DATATYPE $@1 . ID

    ID  shift, and go to state 10


State 9

    1 program: headers main '(' . ')' '{' body return '}'

    ')'  shift, and go to state 11


State 10

    5 main: DATATYPE $@1 ID .

    $default  reduce using rule 5 (main)


State 11

    1 program: headers main '(' ')' . '{' body return '}'

    '{'  shift, and go to state 12


State 12

    1 program: headers main '(' ')' '{' . body return '}'

    FOR       shift, and go to state 13
    IF        shift, and go to state 14
    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    body          go to state 21
    loops         go to state 22
    expressions   go to state 23
    conditionals  go to state 24
    statement     go to state 25


State 13

   13 loops: FOR . $@2 '(' statement ';' statement ';' statement ')' '{' body '}'

    $default  reduce using rule 12 ($@2)

    $@2  go to state 26


State 14

   17 conditionals: IF . $@3 '(' condition ')' '{' expressions '}' else

    $default  reduce using rule 16 ($@3)

    $@3  go to state 27


State 15

   21 statement: ID . BINARY statement
   22          | ID . UNARY
   24          | ID .

    UNARY   shift, and go to state 28
    BINARY  shift, and go to state 29

    $default  reduce using rule 24 (statement)


State 16

   25 statement: NUMBER .

    $default  reduce using rule 25 (statement)


State 17

   23 statement: UNARY . ID

    ID  shift, and go to state 30


State 18

   27 statement: DATATYPE . $@5 variable

    $default  reduce using rule 26 ($@5)

    $@5  go to state 31


State 19

   28 statement: PRINTFF . '(' STRLT ')'

    '('  shift, and go to state 32


State 20

   29 statement: SCANFF . '(' STRLT ',' '&' ID ')'

    '('  shift, and go to state 33


State 21

    1 program: headers main '(' ')' '{' body . return '}'
    9 body: body . expressions
   10     | body . loops
   11     | body . conditionals

    FOR       shift, and go to state 13
    IF        shift, and go to state 14
    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    RETURN    shift, and go to state 34
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    $default  reduce using rule 47 (return)

    loops         go to state 35
    expressions   go to state 36
    conditionals  go to state 37
    statement     go to state 25
    return        go to state 38


State 22

    7 body: loops .

    $default  reduce using rule 7 (body)


State 23

    6 body: expressions .
   14 expressions: expressions . statement ';'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    ID        [reduce using rule 6 (body)]
    NUMBER    [reduce using rule 6 (body)]
    UNARY     [reduce using rule 6 (body)]
    DATATYPE  [reduce using rule 6 (body)]
    PRINTFF   [reduce using rule 6 (body)]
    SCANFF    [reduce using rule 6 (body)]
    $default  reduce using rule 6 (body)

    statement  go to state 39


State 24

    8 body: conditionals .

    $default  reduce using rule 8 (body)


State 25

   15 expressions: statement . ';'

    ';'  shift, and go to state 40


State 26

   13 loops: FOR $@2 . '(' statement ';' statement ';' statement ')' '{' body '}'

    '('  shift, and go to state 41


State 27

   17 conditionals: IF $@3 . '(' condition ')' '{' expressions '}' else

    '('  shift, and go to state 42


State 28

   22 statement: ID UNARY .

    $default  reduce using rule 22 (statement)


State 29

   21 statement: ID BINARY . statement

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    statement  go to state 43


State 30

   23 statement: UNARY ID .

    $default  reduce using rule 23 (statement)


State 31

   27 statement: DATATYPE $@5 . variable

    ID   shift, and go to state 44
    '*'  shift, and go to state 45

    variable  go to state 46


State 32

   28 statement: PRINTFF '(' . STRLT ')'

    STRLT  shift, and go to state 47


State 33

   29 statement: SCANFF '(' . STRLT ',' '&' ID ')'

    STRLT  shift, and go to state 48


State 34

   44 return: RETURN . $@6 NUMBER ';'
   46       | RETURN . $@7 ID ';'

    ID        reduce using rule 45 ($@7)
    $default  reduce using rule 43 ($@6)

    $@6  go to state 49
    $@7  go to state 50


State 35

   10 body: body loops .

    $default  reduce using rule 10 (body)


State 36

    9 body: body expressions .
   14 expressions: expressions . statement ';'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    ID        [reduce using rule 9 (body)]
    NUMBER    [reduce using rule 9 (body)]
    UNARY     [reduce using rule 9 (body)]
    DATATYPE  [reduce using rule 9 (body)]
    PRINTFF   [reduce using rule 9 (body)]
    SCANFF    [reduce using rule 9 (body)]
    $default  reduce using rule 9 (body)

    statement  go to state 39


State 37

   11 body: body conditionals .

    $default  reduce using rule 11 (body)


State 38

    1 program: headers main '(' ')' '{' body return . '}'

    '}'  shift, and go to state 51


State 39

   14 expressions: expressions statement . ';'

    ';'  shift, and go to state 52


State 40

   15 expressions: statement ';' .

    $default  reduce using rule 15 (expressions)


State 41

   13 loops: FOR $@2 '(' . statement ';' statement ';' statement ')' '{' body '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    statement  go to state 53


State 42

   17 conditionals: IF $@3 '(' . condition ')' '{' expressions '}' else

    ID      shift, and go to state 54
    NUMBER  shift, and go to state 55
    TRUE    shift, and go to state 56
    FALSE   shift, and go to state 57

    condition  go to state 58
    boolean    go to state 59


State 43

   21 statement: ID BINARY statement .

    $default  reduce using rule 21 (statement)


State 44

   30 variable: ID . array

    '['  shift, and go to state 60

    $default  reduce using rule 35 (array)

    array  go to state 61


State 45

   31 variable: '*' . variable

    ID   shift, and go to state 44
    '*'  shift, and go to state 45

    variable  go to state 62


State 46

   27 statement: DATATYPE $@5 variable .

    $default  reduce using rule 27 (statement)


State 47

   28 statement: PRINTFF '(' STRLT . ')'

    ')'  shift, and go to state 63


State 48

   29 statement: SCANFF '(' STRLT . ',' '&' ID ')'

    ','  shift, and go to state 64


State 49

   44 return: RETURN $@6 . NUMBER ';'

    NUMBER  shift, and go to state 65


State 50

   46 return: RETURN $@7 . ID ';'

    ID  shift, and go to state 66


State 51

    1 program: headers main '(' ')' '{' body return '}' .

    $default  reduce using rule 1 (program)


State 52

   14 expressions: expressions statement ';' .

    $default  reduce using rule 14 (expressions)


State 53

   13 loops: FOR $@2 '(' statement . ';' statement ';' statement ')' '{' body '}'

    ';'  shift, and go to state 67


State 54

   38 boolean: ID . BINARY ID
   39        | ID . BINARY NUMBER

    BINARY  shift, and go to state 68


State 55

   40 boolean: NUMBER . BINARY ID

    BINARY  shift, and go to state 69


State 56

   41 boolean: TRUE .

    $default  reduce using rule 41 (boolean)


State 57

   42 boolean: FALSE .

    $default  reduce using rule 42 (boolean)


State 58

   17 conditionals: IF $@3 '(' condition . ')' '{' expressions '}' else
   36 condition: condition . BINARY condition

    BINARY  shift, and go to state 70
    ')'     shift, and go to state 71


State 59

   37 condition: boolean .

    $default  reduce using rule 37 (condition)


State 60

   32 array: '[' . NUMBER ']' array
   33      | '[' . ID ']' array
   34      | '[' . ']' array

    ID      shift, and go to state 72
    NUMBER  shift, and go to state 73
    ']'     shift, and go to state 74


State 61

   30 variable: ID array .

    $default  reduce using rule 30 (variable)


State 62

   31 variable: '*' variable .

    $default  reduce using rule 31 (variable)


State 63

   28 statement: PRINTFF '(' STRLT ')' .

    $default  reduce using rule 28 (statement)


State 64

   29 statement: SCANFF '(' STRLT ',' . '&' ID ')'

    '&'  shift, and go to state 75


State 65

   44 return: RETURN $@6 NUMBER . ';'

    ';'  shift, and go to state 76


State 66

   46 return: RETURN $@7 ID . ';'

    ';'  shift, and go to state 77


State 67

   13 loops: FOR $@2 '(' statement ';' . statement ';' statement ')' '{' body '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    statement  go to state 78


State 68

   38 boolean: ID BINARY . ID
   39        | ID BINARY . NUMBER

    ID      shift, and go to state 79
    NUMBER  shift, and go to state 80


State 69

   40 boolean: NUMBER BINARY . ID

    ID  shift, and go to state 81


State 70

   36 condition: condition BINARY . condition

    ID      shift, and go to state 54
    NUMBER  shift, and go to state 55
    TRUE    shift, and go to state 56
    FALSE   shift, and go to state 57

    condition  go to state 82
    boolean    go to state 59


State 71

   17 conditionals: IF $@3 '(' condition ')' . '{' expressions '}' else

    '{'  shift, and go to state 83


State 72

   33 array: '[' ID . ']' array

    ']'  shift, and go to state 84


State 73

   32 array: '[' NUMBER . ']' array

    ']'  shift, and go to state 85


State 74

   34 array: '[' ']' . array

    '['  shift, and go to state 60

    $default  reduce using rule 35 (array)

    array  go to state 86


State 75

   29 statement: SCANFF '(' STRLT ',' '&' . ID ')'

    ID  shift, and go to state 87


State 76

   44 return: RETURN $@6 NUMBER ';' .

    $default  reduce using rule 44 (return)


State 77

   46 return: RETURN $@7 ID ';' .

    $default  reduce using rule 46 (return)


State 78

   13 loops: FOR $@2 '(' statement ';' statement . ';' statement ')' '{' body '}'

    ';'  shift, and go to state 88


State 79

   38 boolean: ID BINARY ID .

    $default  reduce using rule 38 (boolean)


State 80

   39 boolean: ID BINARY NUMBER .

    $default  reduce using rule 39 (boolean)


State 81

   40 boolean: NUMBER BINARY ID .

    $default  reduce using rule 40 (boolean)


State 82

   36 condition: condition . BINARY condition
   36          | condition BINARY condition .

    BINARY  shift, and go to state 70

    BINARY    [reduce using rule 36 (condition)]
    $default  reduce using rule 36 (condition)


State 83

   17 conditionals: IF $@3 '(' condition ')' '{' . expressions '}' else

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    expressions  go to state 89
    statement    go to state 25


State 84

   33 array: '[' ID ']' . array

    '['  shift, and go to state 60

    $default  reduce using rule 35 (array)

    array  go to state 90


State 85

   32 array: '[' NUMBER ']' . array

    '['  shift, and go to state 60

    $default  reduce using rule 35 (array)

    array  go to state 91


State 86

   34 array: '[' ']' array .

    $default  reduce using rule 34 (array)


State 87

   29 statement: SCANFF '(' STRLT ',' '&' ID . ')'

    ')'  shift, and go to state 92


State 88

   13 loops: FOR $@2 '(' statement ';' statement ';' . statement ')' '{' body '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    statement  go to state 93


State 89

   14 expressions: expressions . statement ';'
   17 conditionals: IF $@3 '(' condition ')' '{' expressions . '}' else

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20
    '}'       shift, and go to state 94

    statement  go to state 39


State 90

   33 array: '[' ID ']' array .

    $default  reduce using rule 33 (array)


State 91

   32 array: '[' NUMBER ']' array .

    $default  reduce using rule 32 (array)


State 92

   29 statement: SCANFF '(' STRLT ',' '&' ID ')' .

    $default  reduce using rule 29 (statement)


State 93

   13 loops: FOR $@2 '(' statement ';' statement ';' statement . ')' '{' body '}'

    ')'  shift, and go to state 95


State 94

   17 conditionals: IF $@3 '(' condition ')' '{' expressions '}' . else

    ELSE  shift, and go to state 96

    $default  reduce using rule 20 (else)

    else  go to state 97


State 95

   13 loops: FOR $@2 '(' statement ';' statement ';' statement ')' . '{' body '}'

    '{'  shift, and go to state 98


State 96

   19 else: ELSE . $@4 '{' expressions '}'

    $default  reduce using rule 18 ($@4)

    $@4  go to state 99


State 97

   17 conditionals: IF $@3 '(' condition ')' '{' expressions '}' else .

    $default  reduce using rule 17 (conditionals)


State 98

   13 loops: FOR $@2 '(' statement ';' statement ';' statement ')' '{' . body '}'

    FOR       shift, and go to state 13
    IF        shift, and go to state 14
    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    body          go to state 100
    loops         go to state 22
    expressions   go to state 23
    conditionals  go to state 24
    statement     go to state 25


State 99

   19 else: ELSE $@4 . '{' expressions '}'

    '{'  shift, and go to state 101


State 100

    9 body: body . expressions
   10     | body . loops
   11     | body . conditionals
   13 loops: FOR $@2 '(' statement ';' statement ';' statement ')' '{' body . '}'

    FOR       shift, and go to state 13
    IF        shift, and go to state 14
    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20
    '}'       shift, and go to state 102

    loops         go to state 35
    expressions   go to state 36
    conditionals  go to state 37
    statement     go to state 25


State 101

   19 else: ELSE $@4 '{' . expressions '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20

    expressions  go to state 103
    statement    go to state 25


State 102

   13 loops: FOR $@2 '(' statement ';' statement ';' statement ')' '{' body '}' .

    $default  reduce using rule 13 (loops)


State 103

   14 expressions: expressions . statement ';'
   19 else: ELSE $@4 '{' expressions . '}'

    ID        shift, and go to state 15
    NUMBER    shift, and go to state 16
    UNARY     shift, and go to state 17
    DATATYPE  shift, and go to state 18
    PRINTFF   shift, and go to state 19
    SCANFF    shift, and go to state 20
    '}'       shift, and go to state 104

    statement  go to state 39


State 104

   19 else: ELSE $@4 '{' expressions '}' .

    $default  reduce using rule 19 (else)
